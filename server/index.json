[
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/100_aws_resource_optimization/1_cloudwatch_intro/",
	"title": "Amazon Cloudwatch에 대하여 알아보기",
	"tags": [],
	"description": "",
	"content": " 이 실습은 실제 사용 계정에서 진행 해보세요. 현재 Lab환경으로는 수행하실 수 없습니다.\n 적정 크기 조정을 수행하는 첫 번째 단계는 현재 서비스 사용을 모니터링하고 분석하여 인스턴스 성능 및 사용 패턴에 대한 통찰력을 얻는 것입니다. 충분한 데이터를 수집하려면 최소 2 주 이상 (이상적으로는 1 개월 이상)의 성능을 관찰하여 워크로드와 사용량의 정점을 확인하십시오. 인스턴스 성능을 정의하는 가장 일반적인 지표는 vCPU 사용률, 메모리 사용률, 네트워크 사용률 및 디스크 사용률입니다.\n  Log into your AWS console via SSO, go to the Amazon CloudWatch service page:   EC2의 Service Dashboard를 클릭합니다:   Service Dashboard 및 모든 다른 지표를 관찰하지만 CPU 사용률 및 네트워크 입출력에 중점을 둡니다.:   resource-id가 쓰여있는 왼쪽의 작은 아이콘을 클릭하여 EC2 자원 중 하나를 선택하십시오.:   EC2 리소스를 선택 해제하고 오른쪽 상단의 시간 범위를 수정합니다. custom을 클릭 한 후 2주를 범위로 잡습니다.:   Navigate to the CPU Utilization Average widget, click the three dots and launch the View in metrics page. Using the Graphed metrics section try to answer the following questions:\n  CPU Utilization Average 위젯으로 이동하여 3 개의 점을 클릭하고 지표 보기 페이지를 시작하십시오. 그래프 측정 항목 섹션을 사용하여 다음 질문에 답하십시오.\n   a. CPU 사용율 평균이 가장 높은 인스턴스는 무엇입니까? b. CPU 사용율 최대값이 가장 높은 인스턴스는 무엇입니까? c. CPU 사용율 최소값이 가장 낮은 인스턴스는 무엇입니까?  "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/100_1_aws_account_setup/1_iam_access/",
	"title": "IAM access 설정",
	"tags": [],
	"description": "",
	"content": " 참고 :이 작업을 수행하려면 루트 계정 자격 증명을 사용하여 마스터 계정에 로그인해야합니다.\n 루트 자격 증명을 사용하지 않고 청구 정보에 접근하려면 IAM 액세스를 활성화해야합니다. 이를 통해 루트가 아닌 다른 사용자가 마스터 계정의 청구 정보에 액세스 할 수 있습니다. 이 접근 방식은 각 사용자에게 개별 로그인 정보를 제공하며 각 사용자에게 계정 작업에 필요한 권한만 부여 할 수 있습니다. 예를 들어 재무 팀에 청구 정보에만 액세스 권한을 부여하고 계정의 다른 리소스는 접근 할 수 없도록 할 수 있습니다.\n  마스터계정의 루트사용자로 로그인하고 오른쪽 상단의 계정이름을 클릭한 다음 메뉴에서 My Account 클릭하세요.:   IAM User and Role Access to Billing Information까지 아래로 스크롤 한 다음 Edit을 클릭합니다.   Activate IAM Access를 선택한 다음 Update를 클릭하세요.   IAM user/role access to billing information is activated 활성화되어있는지 확인하세요. :   이제 루트가 아닌 사용자에게 IAM 정책을 통해 청구 정보에 대한 액세스를 제공 할 수 있습니다.\nNOTE: 계속 진행하기 전에 루트사용자를 로그아웃하세요.\n "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/operational-excellence/100_inventory_patch_management/1_intro/",
	"title": "소개",
	"tags": [],
	"description": "",
	"content": "In the cloud, you can apply the same engineering discipline that you use for application code to your entire environment. You can define your entire workload (applications, infrastructure, etc.) as code and update it with code. You can script your operations procedures and automate their execution by triggering them in response to events. By performing operations as code, you limit human error and enable consistent execution of operations activities.\n클라우드에서는 애플리케이션 코드에 사용하는 것과 동일한 엔지니어링 원칙을 전체환경에 적용 할 수 있습니다. 전체 워크로드(애플리케이션, 인프라 등)를 코드로 정의하고 코드로 업데이트 할 수 있습니다. 이벤트에 대한 응답으로 작업 프로시저를 트리거하여 작업 프로시저를 스크립팅하고 실행을 자동화 할 수 있습니다. 코드로 작업을 수행하면 인적오류를 줄이고 작업 활동을 일관되게 실행할 수 있습니다.\n이 실습에서는 Infrastructure as Code 및 Operations of Code 개념을 다음 활동에 적용합니다.\n 인프라 구축 재고 관리 패치 관리  "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/operational-excellence/100_inventory_patch_management/",
	"title": "100 - 인벤토리와 패치 관리",
	"tags": [],
	"description": "",
	"content": "소개 이번 실습은 Infrastructure as Code 와 Operations as Code 를 다음 활동에 적용에 보겠습니다:\n 인프라의 배포 인벤토리 관리 패치 관리  목표:  자동화된 인프라스트럭처 배포 리소스의 동적 관리 자동화된 패치 관리  준비사항:  사용할 AWS 계정  이 랩에서는 AWS 프리 티어에서 다루지 않은 AWS 리소스가 사용될 수 있습니다. 랩 가이드의 끝에는 생성 한 모든 리소스를 제거하는 방법에 대한 추가 섹션이 있습니다. 랩 종료후 반드시 수행해주세요.\n Permissions required  AdministratorAccess AWS 관리 권한  Steps:  소개   운영의 코드화를 사용한 Inventory Management   Patch Management   Creating Maintenance Windows and Scheduling Automated Operations Activities   Creating a Simple Notification Service Topic   Removing Lab Resources   "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/100_1_aws_account_setup/",
	"title": "AWS 계정 설정: AWS Organization &amp; AWS SSO ",
	"tags": [],
	"description": "",
	"content": "Authors  Nathan Besh, Cost Lead Well-Architected +Seyong Kang  소개 이 실습에서는 계정을 구성하고 비용 최적화 작업을 준비하는 단계를 안내합니다. 초기 계정 구조를 생성 및 설정하고 청구 정보에 액세스 할 수 있으며 비용최적화 팀을 만듭니다. 이를 통해 Well-Architected 비용최적화 워크샵을 완료하고 Well-Architected Framework에 따라 워크로드를 최적화 할 수 있습니다.\nGoals  계정 구조 구현 결제 서비스 구현 자세한 비용과 사용정보 사용 비용 최적화 팀 생성 및 연동  준비사항  여러개의 AWS 계정 생성 (최소 3개)  마스터 계정 비용최적화 팀 계정    필요한 권한  마스터와 멤버 계정에 대한 루트유저와 관리자 권한  비용  https://aws.amazon.com/aws-cost-management/pricing/ 다양한 비용이 발생합니다. 비용탐색기 : 1,000 사용 레코드 당 $0.01 S3: CUR 파일의 저장비용, S3 의 가격정책은 https://aws.amazon.com/s3/pricing/ 참고하세요. Sub 계정의 경우 예상비용은 $5미만.  완료 소요 시간  Lab은 최소 30분 정도 시간이 걸립니다.  Steps:  IAM access 설정   계정 구조 만들기   Single Sign On (SSO) 활성화   계정 구성 설정   비용 및 사용 보고서(CUR) 설정   Amazon QuickSight 설정   AWS Cost Explorer 활성화   AWS 생성 비용할당태그 활성화   Tear down   "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/200_aws_resource_optimization/2_create_iamrole/",
	"title": "AMAZON CLOUDWATCH AGENT가 사용할 IAM 역할 만들기",
	"tags": [],
	"description": "",
	"content": "AAWS 리소스를 사용하려면 권한이 필요합니다. 이제 에이전트가 CloudWatch에 지표를 작성하는 데 필요한 권한을 부여하기 위해 IAM 역할을 생성합니다. Amazon은 해당 용도로만 사용 할 수 있는 CloudWatchAgentServerPolicy 및 CloudWatchAgentAdminPolicy라는 두 개의 기본 정책을 만들었습니다.\n  AWS Management Console로 로그인 한 다음 IAM console로 들어갑니다.   왼쪽 메뉴페이지에서 Roles을 선택하고 Create role을 클릭합니다.   Choose a use case 아래, EC2를 클릭합니다(EC2가 AWS Services를 호출하는 것을 허락). 그리고 Next: Permissions를 클릭합니다.   정책목록 중, CloudWatchAgentServerPolicy의 체크박스를 선택합니다. 검색창에 이름을 넣어서 검색하면 찾기 쉽습니다. Next: Tags를 클릭합니다:\n    태그(옵션)를 추가합니다. Next: Review클릭합니다.   Policies에 CloudWatchAgentServerPolicy가 있는지를 확인합니다. 그리고 role name에 CloudWatchAgentServerRole을 넣습니다. 필요하다면 description을 입력합니다. Create role을 클릭합니다.   role이 생성되었습니다.\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/100_aws_resource_optimization/2_resource_opt/",
	"title": "Amazon EC2 리소스 최적화 Recommendations 사용",
	"tags": [],
	"description": "",
	"content": " 이 실습은 실제 사용 계정에서 진행 해보세요. 현재 Lab환경으로는 수행하실 수 없습니다.\n 참고:이 단계를 완료하려면 Amazon EC2 리소스 최적화를 활성화해야합니다. AWS Cost Explorer의 권장 사항 섹션으로 이동하여 Amazon EC2 리소스 최적화를 활성화화세요.\n Amazon EC2 Resource Optimization은 추가비용 없이 AWS Cost Explorer에서 올바른 크기 조정 권장 사항을 제공합니다. 이러한 권장 사항은 계정, 리전 및 태그에서 유휴 상태이거나 사용률이 낮은 인스턴스를 식별합니다. 이러한 권장사항을 생성하기 위해 AWS는 기존 EC2리소스 사용량(Amazon CloudWatch 사용) 및 기존 예약공간을 분석하여 비용 절감기회를 찾아냅니다(예:유휴 인스턴스를 종료하거나 활성 인스턴스를 동일한 제품군/세대 내에서 더 저렴한 옵션으로 축소).\n  AWS Cost Explorer 로 가겠습니다.   왼쪽 메뉴바에서 Recommendations를 선택하세요.   Resource Optimization Recommendations 섹션의 View All을 클릭합니다.   Amazon EC2 리소스 최적화를 활성화하지 않은 경우 첫번째 권장사항을 생성하는 데 최대 24시간이 걸릴 수 있습니다. 일반 또는 billing계정(마스터계정)만 사용하도록 설정할 수 있으며 billing계정(마스터계정)이 설정 페이지(오른쪽 상단)에서 특별히 금지하지 않는 한 기본적으로 연결된 계정과 마스터계정 모두 Recommendations에 접근 할 수 있습니다. recommendations의 품질을 향상시키기 위해, AWS은 다른 디스크, 메모리 사용율 같은 지표(CloudWatch Agent 필요)를 수집할 수 있습니다. 모든 자원 지표는 익명으로 집계되며 AWS는 모델학습을 위해 이 자료들을 사용할 수 있습니다. 만약 지표 수집과 모델개선을 원치 않으시면 AWS support ticket을 제출할 수 있습니다..더 자세한 정보는 AWS Service Terms을 참고해주세요..\nAmazon EC2 리소스 최적화 권장 사항을 활성화했다고 가정하면 권장사항(있는 경우)을 제공하는 화면이 표시됩니다.    Optimization opportunities – 사용가능한 권장사항 Estimated monthly savings – 제공된 각 권장사항과 관련된 예상 월별 절감액의 합계 Estimated savings (%) – 권장사항의 인스턴스와 Amazon EC2 비용(온디맨드)과 비교하여 나타나는 절감액  필요에 따라 권장 사항을 필터링 할 수도 있습니다.\n나타난 recommendation들의 view 를 클릭하면 더 자세한 사항들을 볼 수 있습니다.:   "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/100_1_aws_account_setup/2_account_structure/",
	"title": "계정 구조 만들기",
	"tags": [],
	"description": "",
	"content": "AWS Organizations  AWS Organizations는 AWS의 워크로드가 증가하고 확장됨에 따라 환경을 중앙에서 관리하는 데 도움이 됩니다. 성장하는 스타트업이든, 대기업이든 관계없이 AWS Organizations를 활용하면 결제를 관리하고, 액세스, 규정 준수 및 보안을 제어하고, AWS 계정에서 리소스를 공유하는 일을 모두 중앙에서 손쉽게 처리할 수 있습니다.\nAWS Organizations를 사용하면 계정 생성을 자동화하고, 비즈니스 요구를 반영하도록 계정 그룹을 생성하고, 거버넌스를 위해 이러한 그룹에 정책을 적용할 수 있습니다. 또한 모든 AWS 계정에 대해 단일 결제 방법을 설정하여 결제 과정을 간소화할 수도 있습니다. 다른 AWS 서비스와 통합할 경우 AWS Organizations를 사용하여 조직의 계정 전반에 걸쳐 중앙 구성 및 리소스 공유를 정의할 수 있습니다. AWS Organizations는 모든 AWS 고객이 추가 비용 없이 사용할 수 있습니다.\n 만약 조직 및 통합 결제가 설정되어있다면 과정을 수행하지 마세요.\n AWS Organization을 생성하고 둘 이상의 계정을 마스터계정에 가입시킵니다. 조직에서는 여러 AWS 계정을 효율적이고 일관되게 중앙에서 관리 할 수 있습니다. 제한된 청구작업을 위해 제한된 보안 및 관리권한을 가지는 마스터계정을 갖는 것이 좋습니다. 비용최적화팀 또는 다른기능을 위한 전용 AWS계정과 워크로드 리소스를 위한 다른계정을 생성하세요.\norganizations가 필요합니다.: CreateOrganization 액세스 및 2 개 이상의 AWS 계정이 필요합니다. 멤버계정을 마스터계정에 가입 시키면 해당 멤버계정에 대한 모든 결제정보가 마스터계정에 포함됩니다. 멤버계정에는 더 이상 청구정보, 이전 청구정보를 볼 수 없습니다. 계정을 마스터계정에 가입시키기 전에 보고서 또는 데이터를 백업하거나 내보내십시오.\nAWS Organizations 생성 마스터계정으로 AWS Organization을 생성합니다.\n   필요한 권한이 있는 IAM User로 콘솔에 로그인한 뒤, 상단의 Find Services 에 AWS Organizations 을 검색하고 AWS Organizations를 선택합니다.:   Create organization를 클릭합니다.:   모든 기능을 가진 조직을 만들기위해 Create organization를 선택합니다.   확인 메일을 받을 것입니다. 당신의 계정에서 Verify your email address 를 클릭하세요.:   당신의 조직 콘솔에서 확인 메세지를 볼 수 있습니다.:   이제 다른 계정을 조직에 포함시킬 수 있습니다.\n멤버계정 가입 이제 다른 계정을 당신의 조직에 가입시킬 수 있습니다. 비용최적화 작업을 수행하는 데 사용될 계정뿐만 아니라 워크로드의 리소스를 실행하는 데 사용되는 다른 구성원들의 계정을 만들고 가입해야합니다.\n  AWS Organizations 콘솔에서 Add account를 클릭합니다:   Invite account를 클릭합니다.:   워크로드 계정의 Email or account ID를 입력하고, Notes에 필요한 정보를 입력합니다. 하단의 Invite를 클릭합니다:   요청이 열려있는것을 확인할 수 있습니다. :   이제 멤버계정 (워크로드계정)으로 로그인한 후, AWS Organizations으로 갑니다:   메뉴에서 초대가 온것을 확인할 수 있습니다. Invitations을 클릭합니다:   요청 세부사항(검은 블록 부분)을 확인한 후 Accept를 클릭합니다:   Organization ID (검은 블록 부분)를 확인하고, Confirm를 클릭합니다:   멤버계정(워크로드계정)이 당신의 조직에 포함된 것을 확인할 수 있습니다.   멤버계정(워크로드계정)에 조직가입 성공메일이 보내진 것을 확인할 수 있습니다.:   마스터계정도 새로운 멤버계정이 가입된 것을 메일로 확인할 수 있습니다:   다른계정도 위 내용을 반복하여 조직에 포함시켜주세요.\n서비스 제어 정책 활성화 서비스 제어정첵을 활성화 할 수 있습니다. 중앙에서 사용가능한 최대권한을 조절할 수 있습니다. - 비용관리 및 조직 전체의 태그 표준화를 위한 정책들이 도움이 됩니다.\n  마스터계정으로 로그인 한 뒤 AWS Organizations console에서 Policies를 선택합니다:   기본적으로 두 정책은 모두 비활성화되어 있습니다. Service control policies를 클릭하세요.:   Enable service control policies를 클릭하세요:   Service control policies are enabled을 볼 수 있습니다. Policies를 클릭하세요:   태그 정책을 활성화 할 것입니다. Tag policies를 클릭하세요:   Enable tag policies를 선택합니다:   Tag policies are enabled를 볼 수 있습니다. Policies를 클릭하세요:   이제 서비스제어정책과 태그정책이 활성화 되어있는 것을 볼 수 있습니다:   "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/100_aws_resource_optimization/3_prio_resource_opt/",
	"title": "AMAZON EC2 리소스 최적화 CSV 파일을 다운로드하고 검색하기",
	"tags": [],
	"description": "",
	"content": " 이 실습은 실제 사용 계정에서 진행 해보세요. 만약 없다면 아래의 샘플 자료를 가지고 진행하실 수 있습니다.\n 이번 실습은 Cost Explorer에서 생성한 권장사항들을 가지고 어떻게 비용최적화를 진행할 수 있는지, 권장사항의 우선순위를 정해 실제 비용 최적화를 어떤 순서로 진행하는지를 알아봅니다.\n  Amazon EC2 Resource Optimization 레포트를 다운로드합니다:   Amazon EC2 리소스 최적화 권장 사항이없는 경우 아래 파일을 참조로 사용하십시오. Sample Amazon EC2 Resource Optimization file (.xlsx)\n  먼저 분석에서 너무 작거나 적은 시간 동안 만 실행 된 인스턴스를 제외하겠습니다.   계정에서 활성화 한 비용할당태그 수에 따라 아래 스크린 샷과 기본 열 이름, 수식을 일치시키려는 열이 예제와 다를 수 있습니다.\n Recommended Action 열 오른쪽에 새 열을 삽입하십시오. 첫 번째 행은 TooSmall 열의 레이블입니다. 레이블 아래의 각 행에 다음 수식을 붙여 넣습니다.\n=IF(Q2\u0026lt;25,1,0) 이제 열 Q는 Recommended Instance Type 1 Estimated Savings이 됩니다.\n이 공식은 한 달에 $25(또는 $300/년) 이상을 제공하지 못하는 모든 EC2 인스턴스에 \u0026ldquo;1\u0026quot;을 표시합니다. 조직의 Recommended Instance Type 1 Estimated Savings에 대한 임계 값을 자유롭게 조정하십시오. 잠재적 절감 대신 인스턴스 제품군에 대해 분석을 수행하려는 경우 다음 공식(TooSmall에 적용)을 사용하여 권장 사항에서 더 작은 인스턴스를 제외 할 수도 있습니다.\n=IF(N2=\u0026quot;Modify\u0026quot;,IF(SUMPRODUCT(--(NOT(ISERR(SEARCH({\u0026quot;nano\u0026quot;,\u0026quot;micro\u0026quot;,\u0026quot;small\u0026quot;,\u0026quot;medium\u0026quot;},D2)))))\u0026gt;0,\u0026quot;1\u0026quot;,\u0026quot;0\u0026quot;),\u0026quot;0\u0026quot;) 열 N은 Recommended Action 그리고 열 D는 Instance Type가 되야합니다.\n다음으로, 이전세대 (C4, M3 등)에 속하는 EC2 인스턴스에 플래그를 지정합니다. EC2의 적정크기 찾으면서도 사용가능한 최신세대의 타입을 쓸 수 있도록합니다. 새로운 EC2 세대는 성능이 우수하여 올바른 사이징 운동의 성공 변화를 증가 시키며 일반적으로 이전 세대보다 비용이 적게 들며 높은 비용대비 이점을 제공합니다.  새로운 열 OldGen을 Instance Type 열의 오른쪽에 넣고 아래 공식을 붙여넣습니다:\n=IF(SUMPRODUCT(--(NOT(ISERR(SEARCH({\u0026quot;c4\u0026quot;,\u0026quot;c3\u0026quot;,\u0026quot;c1\u0026quot;,\u0026quot;m4\u0026quot;,\u0026quot;m3\u0026quot;,\u0026quot;m2\u0026quot;,\u0026quot;m1\u0026quot;,\u0026quot;r3\u0026quot;,\u0026quot;r4\u0026quot;,\u0026quot;i2\u0026quot;,\u0026quot;cr1\u0026quot;,\u0026quot;hs1\u0026quot;,\u0026quot;g2\u0026quot;},D2)))))\u0026gt;0,\u0026quot;1\u0026quot;,\u0026quot;0\u0026quot;) 열 D = Instance Type\n이제 recommendations을 복잡성 감소와 비용 절감을 기준으로 정렬 해 보겠습니다:  Minimum Effort: 최소로 필요한 절약 설정\n먼저 우리는 절약할만한 가치가 있는 것에 집중하겠습니다. 기준을 $100로 합니다. 100$이상의 효과가 예상되는 것만 보도록 하겠습니다. Recommended Instance Type 1 Estimated Savings의 number filter 를 100보다 크게 맞춥니다. Group 1: 유휴 EC2 리소스 유휴리소스를 검색합니다. 종료가 권장되는 인스턴스들을 찾기위해 필터를 Recommended Action = \u0026ldquo;Terminate\u0026rdquo; 설정합니다. 데이타를 Recommended Instance Type 1 Estimated Savings = Largest to smallest(내림차순)정렬합니다.\nCPU 사용률이 1 % 미만인 유휴리소스 또는 인스턴스를 필터링합니다. 이러한 인스턴스는 보통 시작된 후 잊어버린 것이므로 이런곳에서 전체 온디맨드의 잠재적인 비용 절감을 나타낼 수 있습니다.\n필터링된 결과들은 해당 인스턴스의 어플리케이션 관리자들과 적정 사이즈에대한 토론을 시작하십시오;이러한 인스턴스가 시작된 이유를 이해하기 위해 조사를 수행하고 자원 소유자와 함께 사용상태를 검증하십시오. 그리고 가능하면 종료하십시오.\n이 실습에서 제공하는 CSV 파일을 사용하는 경우, 2,534 recommendations을 16개로 필터링하여 매월 $3,458를 절약 할 수 있습니다. (결과를 SUM 해보시면 알 수 있습니다.)\nGroup 2: 이전 세대 인스턴스 최신세대 인스턴스가 나와 새로운 인스턴스 세대로 교체가 권장되는 인스턴스를 찾아보겠습니다. 위와 같이 엑셀 필터를 조정합니다. 데이터를 Recommended Actions = “Modify”, OldGen = “1” 과 TooSmall = “0” 필터링 합니다. 데이터를 Recommended Instance Type 1 Projected CPU \u0026lt; 40% 필터링합니다. 데이터를 Recommended Instance Type 1 Estimated Savings = Largest to smallest (내림차순)정렬합니다.\n이것은 이전 세대에 인스턴스 중 활용률이 낮은 리소스(\u0026lt;40 % CPU)에 중점을 두고 동일한 제품군(P 열)내에서 인스턴스 크기를 축소하거나 최신 세대로 현대화 할 수 있습니다.\n최신세대로 전환하려면 그룹 1에서 식별 된 인스턴스와 비교하여 추가 테스트 시간이 필요할 수 있지만 경우에 따라 비용 절감 및 성능을 극대화 할 수 있습니다.\n    Linux vs new gen Windows vs new gen  Linux vs new gen Windows vs new gen     c3.large $0.105/hr up 19% $0.188/hr up 5% m3.large $0.133/hr up 27% $0.259/hr up 27%   c4.large $0.100/hr up 15% $0.192/hr up 7% m4.large $0.100/hr up 4% $0.192/hr up 2%   c5.large $0.985/hr 0% $0.177/hr 0% m5.large $0.096/hr 0% $0.188/hr 0%    미국-버지니아 기준 (2019 년 11 월)\n이 실습에서 제공하는 올바른 크기 조정 CSV 파일을 사용하는 경우 2,534recomendations를 22개로로 줄이고 잠재적 절감 효과는 매월 6,362입니다.\nGroup 3: 최신 세대 인스턴스 데이터를 Recommended Actions = “Modify” 과 OldGen = “0” 과 **TooSmall = “0”**로 필터링 하세요. Recommended Instance Type 1 Projected CPU \u0026lt; 40% 로 필터링 하세요. 데이터는 Recommended Instance Type 1 Estimated Savings = Largest to smallest(내림차순)로 정렬합니다.\n현재 가장 최신세대에서 활용률이 낮은 자원을 선택합니다. 잠재적으로 절약 할 수있는 항목을 기준으로 정렬하여 더 큰 절약을 할 수 있는 인스턴스의 우선순위를 정하는 것이 좋습니다.\n또한 다른 권장 인스턴스유형 (열 U에서 AD까지)을 확인하는 것을 잊지 마십시오: Amazon EC2 Resource Optimization은 각 권장사항 당 최대 3개의 인스턴스를 추천합니다. 먼저 보수적인 권장사항(첫번째), 그리고 그것보다 더 적극적이고 높은 절감 권장사항(두번째 및 세번째)입니다.\n이 실습에서 제공하는 올바른 크기 조정 CSV 파일을 사용하는 경우 2,534 개의 권장 사항을 22개로 잠재적 인 절감 효과를 월별 $4,879.56로 필터링됩니다.\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/200_aws_resource_optimization/3_attach_iamrole/",
	"title": "EC2인스턴스에 CloudWatch IAM role 연결하기",
	"tags": [],
	"description": "",
	"content": "  이제 이전 스텝에서 생성한 IAM Role created 기존의 EC2인스턴스와 연결할 것입니다. Amazon EC2 Dashboard 로 가겠습니다..   왼쪽 메뉴에서 Instances를 클릭하세요.   검색창에 WellArchitectedLabsStack을 입력하여 오토스캐일링 그룹이 자동으로 생성한 2개의 인스턴스를 찾습니다. 그리고 하나를 선택한수 상단의 Action버튼을 클릭합니다. 그리고 Instance Settings -\u0026gt; Attach/Replace IAM Role 을 아래 그림과 같이 순서대로 클릭합니다.   IAM role의 드랍 박스 버튼을 클릭하여 이전에 생성한 CloudWatchAgentServerRole 역할을 검색 한 후 선택하고 Apply를 클릭합니다..   이제 EC2인스턴스에 CloudWatchAgentServerRole이 성공적으로 연결되었습니다.   인스턴스를 클릭하면 연결된 IAM role을 확인 하실 수 있습니다.   "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/100_1_aws_account_setup/3_configure_sso/",
	"title": "Single Sign On (SSO) 활성화",
	"tags": [],
	"description": "",
	"content": "AWS Single Sign-On  AWS Single Sign-On(SSO)을 사용하면 여러 AWS 계정 및 비즈니스 애플리케이션에 대한 액세스를 중앙에서 손쉽게 관리하고 사용자에게 Single Sign-On 액세스를 제공하여 할당된 모든 계정 및 애플리케이션을 한 곳에서 액세스하도록 할 수 있습니다. AWS SSO를 사용하면 AWS Organizations의 모든 내 계정에 대한 액세스와 사용자 권한을 중앙에서 손쉽게 관리할 수 있습니다. AWS SSO는 계정에 필요한 모든 권한을 자동으로 구성하고 관리하므로 각 계정에서 추가로 설정할 필요가 없습니다. 일반적인 작업 기능을 기반으로 사용자 권한을 할당하고 특정 보안 요구 사항을 충족하도록 해당 권한을 사용자 지정할 수 있습니다. 또한 AWS SSO는 Salesforce, Box 및 Office 365와 같은 많은 비즈니스 애플리케이션에 대한 통합을 기본적으로 제공합니다.\nAWS SSO를 사용하면 AWS SSO의 자격 증명 저장소에서 사용자 자격 증명을 생성 및 관리하거나 Microsoft Active Directory 및 Azure Active Directory(Azure AD) 및 Okta Universal Directory를 비롯한 기존 자격 증명 소스에 쉽게 연결할 수 있습니다.\n손쉽게 AWS SSO를 시작할 수 있습니다. AWS SSO 관리 콘솔에서 몇 번의 클릭만으로 AWS SSO를 기존 자격 증명 소스에 연결하고 사용자에게 단일 사용자 포털에서 할당된 AWS Organizations 계정 및 수백 개의 사전 통합된 클라우드 애플리케이션에 대한 액세스 권한을 부여하는 권한을 구성할 수 있습니다.\n SSO 설정 AWS Organization를 생성한 마스터계정으로 진행합니다.\n   권한이 있는 IAM사용자로 로그인 한 후, Find Services에서 SSO를 검색한 다음 AWS Single Sign-On를 클릭합니다:   Enable AWS SSO를 클릭합니다:   Groups을 선택합니다:   Create group을 선택합니다:   그룹 이름에 Cost_Optimization를 입력하고 설명에 For Cost Optimazion User를 입력한 후Create를 선택합니다:   Users를 클릭합니다:   Add user를 클릭합니다:   아래 세부사항들을 입력합니다:\n Username:CostUser1 Password Email address First name : Cost Last name : User1 Display name : Cost User1 필요에 따라 옵션필드를 구성하고 Next: Groups을 선택합니다.:     Cost_Optimization 그룹을 선택하고 Add user를 클릭합니다:   사용자는 Portal URL 과 Username이 포함된 메일을 받았을 것입니다. 해당메일의 Accept invitation를 클릭하세요:   포탈로 가면, Password를 입력할 수 있습니다. 그리고 Update user를 클릭하세요:   Continue를 선택합니다.: 나머지 단계를 모두 완료하기 전까지 사용자에게는 권한이 부여되지 않습니다.\r    AWS SSO의 AWS accounts를 클릭하고 Permission sets를 선택한 후, Create permission set을 클릭하세요:   Create a custom permission set의 이름에 Master_CostOptimization Description에 Accessto Cost Optimization services in the master account를 입력하세요. Session duration은 4hours, Create a custom permissions policy의 체크박스를 체크합니다. 아래 사용자 지정 권한 정책을 복사하여 세부정책 박스에 붙여넣은 다음 Create를 클릭합니다.\n**반드시** 보안관련 팀/전문가와 협력하여 조직에 대한 최소 권한으로 인라인 정책을 작성하도록합니다.\r    클릭하여 사용자 지정 권한 정책 보기    {\r\u0026quot;Version\u0026quot;: \u0026quot;2012-10-17\u0026quot;,\r\u0026quot;Statement\u0026quot;: [\r{\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;,\r\u0026quot;Action\u0026quot;: [\r\u0026quot;budgets:*\u0026quot;,\r\u0026quot;ce:*\u0026quot;,\r\u0026quot;aws-portal:*Usage\u0026quot;,\r\u0026quot;aws-portal:*PaymentMethods\u0026quot;,\r\u0026quot;aws-portal:*Billing\u0026quot;,\r\u0026quot;cur:DescribeReportDefinitions\u0026quot;,\r\u0026quot;cur:PutReportDefinition\u0026quot;,\r\u0026quot;cur:DeleteReportDefinition\u0026quot;,\r\u0026quot;cur:ModifyReportDefinition\u0026quot;,\r\u0026quot;pricing:DescribeServices\u0026quot;,\r\u0026quot;wellarchitected:*\u0026quot;\r],\r\u0026quot;Resource\u0026quot;: \u0026quot;*\u0026quot;\r}\r]\r}\r     다시 Create permission set를 클릭합니다. 이제 멤버의 정책을 만들 것입니다.\n  이번엔 다른 브라우저 창을 통해 마스터계정의 CloudFormation의 Stack으로 갑니다. 처음 생성했던 MasterAccountStack을 선택합니다.   상단의 Outputs를 선택하고 S3bucket의 값을 복사하여 어딘가 기록합니다.   Create a custom permission set의 이름에 Member_CostOptimization Description에 Accessto Cost Optimization services in the member account를 입력하세요. Session duration은 4hours, Create a custom permissions policy의 체크박스를 체크합니다. 아래 정책을 기본으로 요구사항에 맞게 수정하고, 아래 정책필드의 (Master CUR bucket)에 이전에 복사한 S3bucket의 내용을 붙여넣고 (This Account ID)를 워크로드계정의 12자리 계정 캐노니컬 ID로 변경한 후 정책필드에 아래 내용을 붙여넣습니다. Create를 클릭합니다.\n**반드시** 보안관련 팀/전문가와 협력하여 조직에 대한 최소 권한으로 인라인 정책을 작성하도록합니다.\r    클릭하여 사용자 지정 권한 정책 보기    {\r\u0026quot;Version\u0026quot;: \u0026quot;2012-10-17\u0026quot;,\r\u0026quot;Statement\u0026quot;: [\r{\r\u0026quot;Sid\u0026quot;: \u0026quot;CostServices\u0026quot;,\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;,\r\u0026quot;Action\u0026quot;: [\r\u0026quot;ce:*\u0026quot;,\r\u0026quot;budgets:*\u0026quot;,\r\u0026quot;aws-portal:*Usage\u0026quot;,\r\u0026quot;aws-portal:*PaymentMethods\u0026quot;,\r\u0026quot;aws-portal:*Billing\u0026quot;,\r\u0026quot;pricing:DescribeServices\u0026quot;,\r\u0026quot;wellarchitected:*\u0026quot;\r],\r\u0026quot;Resource\u0026quot;: \u0026quot;*\u0026quot;\r},\r{\r\u0026quot;Sid\u0026quot;: \u0026quot;S3MasterCUR\u0026quot;,\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;,\r\u0026quot;Action\u0026quot;: [\r\u0026quot;s3:GetObject\u0026quot;,\r\u0026quot;s3:ListBucket\u0026quot;\r],\r\u0026quot;Resource\u0026quot;: [\r\u0026quot;arn:aws:s3:::(Master CUR bucket)\u0026quot;\r]\r},\r{\r\u0026quot;Sid\u0026quot;: \u0026quot;AthenaGlueAndServiceReadAccess\u0026quot;,\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;,\r\u0026quot;Action\u0026quot;: [\r\u0026quot;athena:*\u0026quot;,\r\u0026quot;glue:*\u0026quot;,\r\u0026quot;iam:ListRoles\u0026quot;,\r\u0026quot;iam:ListPolicies\u0026quot;,\r\u0026quot;s3:GetBucketLocation\u0026quot;,\r\u0026quot;s3:ListAllMyBuckets\u0026quot;\r],\r\u0026quot;Resource\u0026quot;: [\r\u0026quot;*\u0026quot;\r]\r},\r{\r\u0026quot;Sid\u0026quot;: \u0026quot;QuickSightAccess\u0026quot;,\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;,\r\u0026quot;Action\u0026quot;: [\r\u0026quot;quicksight:CreateUser\u0026quot;,\r\u0026quot;quicksight:Subscribe\u0026quot;\r],\r\u0026quot;Resource\u0026quot;: \u0026quot;*\u0026quot;\r},\r{\r\u0026quot;Sid\u0026quot;: \u0026quot;IAMAccessForGlue\u0026quot;,\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;,\r\u0026quot;Action\u0026quot;: \u0026quot;iam:*\u0026quot;,\r\u0026quot;Resource\u0026quot;: [\r\u0026quot;arn:aws:iam::(This Account ID):role/service-role/AWSGlueServiceRole-Cost*\u0026quot;,\r\u0026quot;arn:aws:iam::(This Account ID):policy/service-role/AWSGlueServiceRole-Cost*\u0026quot;\r]\r},\r{\r\u0026quot;Sid\u0026quot;: \u0026quot;S3AccessForAthena\u0026quot;,\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;,\r\u0026quot;Action\u0026quot;: [\r\u0026quot;s3:GetBucketLocation\u0026quot;,\r\u0026quot;s3:GetObject\u0026quot;,\r\u0026quot;s3:ListBucket\u0026quot;,\r\u0026quot;s3:ListBucketMultipartUploads\u0026quot;,\r\u0026quot;s3:ListMultipartUploadParts\u0026quot;,\r\u0026quot;s3:AbortMultipartUpload\u0026quot;,\r\u0026quot;s3:CreateBucket\u0026quot;,\r\u0026quot;s3:PutObject\u0026quot;\r],\r\u0026quot;Resource\u0026quot;: [\r\u0026quot;arn:aws:s3:::aws-athena-query-results-*\u0026quot;\r]\r},\r{\r\u0026quot;Sid\u0026quot;: \u0026quot;FullS3AccessForBucketsWithSpecificPrefix\u0026quot;,\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;,\r\u0026quot;Action\u0026quot;: \u0026quot;s3:*\u0026quot;,\r\u0026quot;Resource\u0026quot;: [\r\u0026quot;arn:aws:s3:::cost*\u0026quot;\r]\r}\r]\r}\r     AWS organization을 클릭하고, 마스터계정을 선택한 다음, Assign users를 선택합니다:   Groups을 선택하고, Cost_Optimization 그룹을 클릭한 후, Next: Permission sets를 클릭합니다:   Permission set의 Master_CostOptimization을 체크한 후, Finish를 클릭합니다:   Proceed to AWS accounts클릭합니다:   워크로드 계정을 맴버로 셋팅합니다. Memeber account를 선택하고, Assign users를 클릭합니다.\n  Groups을 선택하고, Cost_Optimization 그룹을 선택한 후, Next: Permission sets를 클릭합니다:   Permission set의 Member_CostOptimization를 선택하고, Finish를 클릭합니다.\n  Proceed to AWS accounts를 클릭합니다.\n  이제 비용 최적화 사용자, 그룹 및 권한을 설정했습니다.\n "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/operational-excellence/100_inventory_patch_management/4_inventory_mgmt/",
	"title": " 운영의 코드화를 사용한 Inventory Management",
	"tags": [],
	"description": "",
	"content": "Management Tools: Systems Manager AWS Systems Manager는 IT 운영을 가능하게하는 기능들을 모아놓은 서비스 입니다.\nEC2 인스턴스나 하이브리드 환경의 on-premises system 을 Systems Manager로 관리하기 위해서는 설정과 사전 조건이 있습니다.\n 지원되는 운영 체제를 사용해야합니다  지원되는 운영 체제에는 Windows, Amazon Linux, Ubuntu Server, RHEL 및 CentOS 버전이 포함됩니다   SSM 에이전트가 설치되어 있어야합니다  윈도우 환경의 SSM 에이전트를 사용하는 경우는 PowerShell 3.0이상의 버전이 필요하고 낮은 버전의 경우는SSM documents를 확인해주세요.   EC2 인스턴스는 아웃 바운드 인터넷 액세스 권한이 있어야합니다  실습은 CloudFormation의 경우 EC2는 privatesubnet에 위치해있습니다. System Manager가 public network를 통해 EC2에 접근하는 것이 불가능하기 때문에 VPC endpoint가 필요합니다.   지원되는 지역의 Systems Manager에 액세스해야합니다 Systems Manager에는 IAM 역할이 필요합니다  명령을 처리 할 인스턴스 용 명령을 실행하는 사용자 용    SSM 에이전트는 기본적으로 다음에 설치됩니다.\n 2017 년 9 월 이후의 Amazon Linux base AMI Windows Server 2016 인스턴스 2016 년 11 월 이후에 배포된 Windows Server 2003-2012 R2 AMI에서 생성 된 인스턴스  AWS Systems Manager의 추가적인 사용비용은 없습니다.. AWS Systems Manager에서 관리하거나 생성한 기본 AWS 리소스 (예 : Amazon EC2 인스턴스 또는 Amazon CloudWatch 지표)에 대해서만 비용을 지불합니다. 사용한만큼만 지불하십시오. 최소 비용과 사전 약정은 없습니다.\n4.1 Systems Manager 설정   실습환경을 사용하신다면 PrivateSubnet에 위치한 EC2 인스턴스를 위해 VPC endpoint를 생성할 것입니다. AWS Services 메뉴의 VPC로 갑니다. 그리고 왼쪽 메뉴의 endpoint를 클릭합니다. 그리고 Create endpoint를 클릭합니다.   Service category의 AWS Service를 클릭하고 Service Name의 검색창에 ec2를 검색합니다. 그리고 com.amazonaws..ec2 을 선택하고 맨 아래 Create endpoint를 클릭합니다.   동일한 방법으로 com.amazonaws..ec2messages, com.amazonaws..ssm도 선택합니다. 최종적으로 생성된 엔드포인트는 아래와 같습니다.   필요에 따라 아래의 인터페이스를 생성할 수도 있습니다.\n com.amazonaws.region.ssm: Systems Manager 서비스에 대한 엔드포인트 com.amazonaws.region.ec2messages: Systems Manager에서는 이 엔드포인트를 사용하여 SSM 에이전트에서 Systems Manager 서비스로 호출합니다. com.amazonaws.region.ec2: Systems Manager를 사용하여 VSS 지원 스냅샷을 만든 경우, EC2 서비스에 대한 엔드포인트가 있어야 합니다. EC2 엔드포인트가 정의되어 있지 않으면 연결된 EBS 볼륨을 표시하는 호출이 실패하고 이에 따라 Systems Manager 명령이 실패합니다. com.amazonaws.region.ssmmessages: 이 엔드포인트는 Session Manager를 사용하여 보안 데이터 채널을 통해 인스턴스에 연결하는 경우에만 필요합니다. 자세한 내용은 AWS Systems Manager Session Manager 및 참조: ec2messages, ssmmessages 및 기타 API 호출 단원을 참조하십시오.    게이트웨이 엔드포인트 생성의 단계에 따라 Amazon S3에 대한 다음 게이트웨이 엔드포인트를 생성할 수도 있습니다.\n com.amazonaws.region.s3: Systems Manager는 이 엔드포인트를 사용하여 SSM 에이전트를 업데이트하고 S3 버킷 저장을 선택한 출력 로그 업로드, 버킷에 저장한 스크립트 또는 기타 파일 검색 등의 작업에 사용합니다.    이제 인스턴스에 IAM role을 추가하겠습니다. 마스터 계정을 사용하여 Systems Manager 콘솔에 접속합니다: https://console.aws.amazon.com/systems-manager/.\n  왼쪽 메뉴에서 Managed Instances 를 선택합니다. Systems Manager의 사전조건을 만족하지 않았다면, Start 페이지가 나타나게 됩니다. 실습환경을 사용했다면 System Manager - Managed Instance Starte페이지가 나타날 것입니다.  해당 환경에서 사용되는 인스턴스는 Amazon Linux AMI 2017.09입니다. 이 버전의 운영체제가 지원하며 사전에 SSM Agent를 기본으로 설치한 버전입니다.    Systems Manager가 관리할 인스턴스를 위한 인스턴스 프로파일을 생성하겠습니다.\n IAM console로 갑니다. 왼쪽 메뉴중 Roles를 클릭합니다. Create role를 클릭합니다. Select type of trusted entity 섹션에서, AWS service를 클릭합니다. 그리고 Choose the service that will use this role 섹션에서, 첫번째 선택지인 EC2(EC2 Allows EC2 instances to call AWS services on your behalf)를 선택합니다. 그리고 Next Permission를 클릭합니다.     Attached permissions policy 아래, AmazonEC2RoleforSSM을 검색하고 체크박스를 선택합니다. 그리고 Next: Tags를 클릭합니다.   Next Review를 클릭합니다.\n  Review 섹션에서는:\n Role name을 입력합니다: ManagedInstancesRole. 필요하다면 Role description도 입력합니다. Create role를 선택합니다.    Systems Manager로 관리하려는 인스턴스에 이 역할을 적용하십시오.\n EC2 Console로 가서 Instances를 클릭합니다. IAM role를 연결하려는 인스턴스를 클릭한 후. 상단의 Actions, Instance Settings, 그리고 Attach/Replace IAM Role를 클릭합니다.  Attach/Replace IAM Role의, ManagedInstancesRole를 검색한 뒤 리스트의 해당 role을 선택한 후 Apply를 누릅니다.  Systems Manager로 관리하려는 다른 인스턴스에도 ManagedInstancesRole role을 연결합니다.    Systems Manager console로 간 다음, 메뉴의 Managed Instances를 클릭합니다. 인스턴스가 목록에 나타날 때까지 주기적으로 Managed Instances를 선택하십시오. 몇 분 이 지나야 인스턴스가 Managed Instances 목록에 채워집니다.   최종적으로 Managed Instance에 등록한 인스턴스를 볼 수 있습니다. 원하는 경우보다 제한적인 권한을 사용하여 Systems Manager에 대한 액세스 권한을 부여 할 수 있습니다.\n   4.2 Create a Second CloudFormation Stack  Create a second CloudFormation stack using the procedure in 2.1 with the following changes:  In the Specify Details section, define a Stack name, such as OELabStack2. Specify the InstanceProfile using the ManagedInstancesRole you defined. Define the Workload Name as Prod.    Systems Manager: Inventory You can use AWS Systems Manager Inventory to collect operating system (OS), application, and instance metadata from your Amazon EC2 instances and your on-premises servers or virtual machines (VMs) in your hybrid environment. You can query the metadata to quickly understand which instances are running the software and configurations required by your software policy, and which instances need to be updated.\n4.3 Using Systems Manager Inventory to Track Your Instances  Under Instances \u0026amp; Nodes in the AWS Systems Manager navigation bar, choose Inventory.  Scroll down in the window to the Corresponding managed instances section. Inventory currently contains only the instance data available from the EC2 Choose the InstanceID of one of your systems. Examine each of the available tabs of data under the Instance ID heading.   Inventory collection must be specifically configured and the data types to be collected must be specified  Choose Inventory in the navigation bar. Choose Setup Inventory in the top right corner of the window   In the Setup Inventory screen, define targets for inventory:  Under Specify targets by, select Specifying a tag Under Tags specify Environment for the key and OELabIPM for the value      NoteYou can select all managed instances in this account, ensuring that all managed instances will be inventoried. You can constrain inventoried instances to those with specific tags, such as Environment or Workload. Or you can manually select specific instances for inventory.\n  Schedule the frequency with which inventory is collected. The default and minimum period is 30 minutes  For Collect inventory data every, accept the default 30 Minute(s)   Under parameters, specify what information to collect with the inventory process  Review the options and select the defaults   (Optional) If desired, you may specify an S3 bucket to receive the inventory execution logs (you will need to create a destination bucket for the logs prior to proceeding):  Check the box next to Sync inventory execution logs to an S3 bucket under the Advanced options. Provide an S3 bucket name. (Optional) Provide an S3 bucket prefix.   Choose Setup Inventory at the bottom of the page (it can take up to 10 minutes to deploy a new inventory policy to an instance). To create a new inventory policy, from Inventory, choose Setup inventory. To edit an existing policy, from State Manager in the left navigation menu, select the association and choose Edit.   NoteYou can create multiple Inventory specifications. They will each be stored as associations within Systems Manager State Manager.\n Systems Manager: State Manager In State Manager, an association is the result of binding configuration information that defines the state you want your instances to be in to the instances themselves. This information specifies when and how you want instance-related operations to run that ensure your Amazon EC2 and hybrid infrastructure is in an intended or consistent state.\nAn association defines the state you want to apply to a set of targets. An association includes three components and one optional set of components:\n A document that defines the state Target(s) A schedule (Optional) Runtime parameters.  When you performed the Setup Inventory actions, you created an association in State Manager.\n4.4 Review Association Status  Under Actions in the navigation bar, select State Manager. At this point, the Status may show that the inventory activity has not yet completed.  Choose the single Association id that is the result of your Setup Inventory action. Examine each of the available tabs of data under the Association ID heading. Choose Edit. Enter a name under Name - optional to provide a more user friendly label to the association, such as InventoryAllInstances (white space is not permitted in an Association Name).    Inventory is accomplished through the following:\n The activities defined in the AWS-GatherSoftwareInventory command document. The parameters provided in the Parameters section are passed to the document at execution. The targets are defined in the Targets section.   ImportantIn this example there is a single target, the wildcard. The wildcard matches all instances making them all targets.\n  The schedule for this activity is defined under Specify schedule and Specify with to use a CRON/Rate expression on a 30 minute interval. There is the option to specify Output options.   NoteIf you change the command document, the Parameters section will change to be appropriate to the new command document.\n Navigate to Managed Instances under Instances and Nodes in the navigation bar. An Association Status has been established for the inventoried instances under management. Choose one of the Instance ID links to go to the inventory of the instance. The Inventory tab is now populated and you can track associations and their last activity under the Associations tab. Navigate to Compliance under Instances \u0026amp; Nodes in the navigation bar. Here you can view the overall compliance status of your managed instances in the Compliance Summary and the individual compliance status of systems in the Corresponding managed instances section below.   NoteThe inventory activity can take up to 10 minutes to complete. While waiting for the inventory activity to complete, you can proceed with the next section.\n Systems Manager: Compliance You can use AWS Systems Manager Configuration Compliance to scan your fleet of managed instances for patch compliance and configuration inconsistencies. You can collect and aggregate data from multiple AWS accounts and Regions, and then drill down into specific resources that aren’t compliant.\nBy default, Configuration Compliance displays compliance data about Systems Manager Patch Manager patching and Systems Manager State Manager associations. You can also customize the service and create your own compliance types based on your IT or business requirements. You can also port data to Amazon Athena and Amazon QuickSight to generate fleet-wide reports.\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/200_aws_resource_optimization/4_memory_plugin/",
	"title": "Cloudwatch Agent 수동 설치",
	"tags": [],
	"description": "",
	"content": "  이제 수동으로 CloudWatch agent 설치한 후 메모리 데이타 수집을 시작할 것입니다.Amazon EC2 Dashboard로 갑니다.   CloudWatchAgentServerRole IAM role을 연결한 EC2인스턴스의 접속정보를 복사하겠습니다. IAM role을 연결한 인스턴스를 선택하고 Connect를 누릅니다.   Connect to your instance 대화창에서 example에 있는 접속정보를 복사합니다.\n  이 정보는 bastionhost에서 접속할때 필요하니 어딘가 복사해 둡니다.\n  Loadbalancer와 연결된 EC2는 PrivateSubnet에 있기 때문에 VPC외부에서는 직접 접근이 불가능합니다. BastionHost를 이용해 EC2에 접근하도록 하겠습니다. EC2가 사용하는 pem 키를 bastionhost로 복사하겠습니다.\n  .pem 파일의 권한을 변경해야합니다. chmod 400 \u0026lt;path.pem\u0026gt; 을 입력하여 파일권한을 변경합니다.\n 아래 명령어를 터미널의 pem키가 있는 위치에서 입력합니다.  ssh -i \u0026lt;pem path\u0026gt; \u0026lt;pem filename\u0026gt; ec2-user@\u0026lt;bastionhost-public-dns\u0026gt;:~   pem-path : CloudFormation은 생성할때 만든 EC2 key pair .pem의 경로를 입력합니다.\n  pem-filename : 복사할 위치의 pem 파일의 이름을 입력합니다. (기존과 동일하게 입력합니다.)\n  bastionhost-public-dns : CloudFormation의 output을 클릭하면 bastionhostdns를 알 수 있습니다. 또는 ec2인스턴스의 bastionhost의 public dns를 확인하셔도 됩니다.\n  EC2 dashboard에서 찾기   Cloudformation output에서 찾기     예) 아래와 같은 형태로 입력하세요.\nscp -i ./warworkshopkey.pem warworkshopkey.pem ec2-user@ec2-3-210-197-135.compute-1.amazonaws.com:~  아래와 같이 메세지와 함께 업로드가 완료됩니다.   이제 EC2 Dashboard로 가서 왼쪽 메뉴 리스트 중 Instances 를 클릭하고 BastionHost이름의 EC2인스턴스를 클릭합니다. 상단의 Connect를 클릭합니다.   새로 뜬 대화창의 browser-based SSH connection tool를 클릭하고 User name에 ec2-user 그리고 Connect를 클릭합니다.   Terminal에 ls를 입력하면 복사된 pem을 확인하실 수 있습니다.   이제 아까 복사해둔 EC2의 접속정보를 붙여넣어 해당 EC2에 접속하도록하겠습니다. 터미널 쉘의 변경된 ec2-user의 ip를 확인할 수 있습니다. 이제 본격적으로 Cloudwatch-agent를 설치하도록 하겠습니다.   Amazon Cloudwatch agent 패키지를 다운로드합니다. 해당 링크는 Amazon Linux를 위한 패키지이며, 다른 os는 여기서 확인하세요.\n  wget https://s3.amazonaws.com/amazoncloudwatch-agent/linux/amd64/latest/AmazonCloudWatchAgent.zip install package의 압축을 해제합니다.  unzip AmazonCloudWatchAgent.zip sudo ./install.sh AmazonCloudWatchAgent profile 구성  서버에서 CloudWatch 에이전트를 실행하기 전에 사용자 정의 지표를 포함하여 에이전트가 수집 할 지표 및 로그를 지정하는 JSON 파일 인 CloudWatch 에이전트 구성파일을 작성해야합니다. 마법사를 사용하거나 처음부터 직접 작성하여 만들 수 있습니다. 에이전트 구성 파일을 변경할 때마다 변경 사항을 적용하려면 에이전트를 다시 시작해야합니다.\n마법사는 AWS 자격증명 및 구성파일이있는 경우 사용할 자격증명 및 AWS 리전을 자동 검색 할 수 있습니다. 이러한 파일에 대한 자세한 내용은 AWS Systems Manager 사용 설명서 및 AAWS documentation page의 구성 및 자격증몇 파일을 참조하십시오.\n이제 선택한 EC2 인스턴스에서 아래 명령을 실행하여 CloudWatch 에이전트 구성 파일 마법사를 시작하겠습니다.\nsudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-config-wizard For this lab we want to keep the following structure:\n   CloudWatch Agent Configutation File Wizard Parameter     On which OS are you planning to use the agent? 1. Linux   Are you using EC2 or On-Premises hosts? 1. EC2   Which user are you planning to run the agent? 2. cwagent   Do you want to turn on StatsD daemon? 2. No   Do you want to monitor metrics from CollectD? 2. No   Do you want to monitor any host metrics? 1. Yes   Do you want to monitor cpu metrics per core? 2. No   Do you want to add ec2 dimensions? 1. Yes   Would you like to collect your metrics at high resolution? 4. 60s   Which default metrics config do you want? 1. Basic   Are you satisfied with the above config? 1. Yes   Do you have any existing CloudWatch Log Agent? 2. No   Do you want to monitor any log files? 2. No   Do you want to store the config in the SSM parameter store? 2. No    The CloudWatch Agent config file should look like the following:\n{ \u0026quot;agent\u0026quot;: { \u0026quot;metrics_collection_interval\u0026quot;: 60, \u0026quot;run_as_user\u0026quot;: \u0026quot;cwagent\u0026quot; }, \u0026quot;metrics\u0026quot;: { \u0026quot;append_dimensions\u0026quot;: { \u0026quot;AutoScalingGroupName\u0026quot;: \u0026quot;${aws:AutoScalingGroupName}\u0026quot;, \u0026quot;ImageId\u0026quot;: \u0026quot;${aws:ImageId}\u0026quot;, \u0026quot;InstanceId\u0026quot;: \u0026quot;${aws:InstanceId}\u0026quot;, \u0026quot;InstanceType\u0026quot;: \u0026quot;${aws:InstanceType}\u0026quot; }, \u0026quot;metrics_collected\u0026quot;: { \u0026quot;disk\u0026quot;: { \u0026quot;measurement\u0026quot;: [ \u0026quot;used_percent\u0026quot; ], \u0026quot;metrics_collection_interval\u0026quot;: 60, \u0026quot;resources\u0026quot;: [ \u0026quot;*\u0026quot; ] }, \u0026quot;mem\u0026quot;: { \u0026quot;measurement\u0026quot;: [ \u0026quot;mem_used_percent\u0026quot; ], \u0026quot;metrics_collection_interval\u0026quot;: 60 } } } } CloudWatch Agent를 시작합니다.  sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/bin/config.json -s 지표를 사용할 수있게되는 데 최대 5 분이 소요될 수 있습니다. 지표세션 아래의 Amazon CloudWatch 콘솔 페이지로 돌아가서 메모리 정보를 받고 있는지 확인하십시오.\nCWAgent를 클릭합니다: ImageID,InstanceID,InstanceType를 클릭합니다: 리스트의 Instance를 선택합니다: 이제 CloudWatch 에이전트 설치를 완료했으며 Amazon CloudWatch에서 해당 인스턴스의 메모리 사용률을 모니터링 할 수 있습니다.\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/100_aws_resource_optimization/4_act_resource_opt/",
	"title": "recommendations 조치",
	"tags": [],
	"description": "",
	"content": "이 실습에서는 복잡성을 낮추고 높은 절감 권장사항을 식별하기 위해 올바른 크기 조정 권장 사항의 우선 순위를 지정하는 방법을 배웠습니다.우리는 처음에 $86,627의 잠재적 절감액으로 2,534 개의 권장 사항으로 시작했지만 전체 잠재적으로 최대 $14,699.56까지 절약 가능한 60 건을 식별했습니다.\n그룹1(유휴 자원)와 그룹2(이전 세대)는 적합한 크기조정 연습을 위한 복잡하지 경우입니다. 올바른 사이징을 위한 정기적인 프로세스를 진행하는 방법을 배우면 조직은 그룹3(현재/최신세대) 및 기타 사례에 신속하게 대처할 수 있습니다.\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/100_1_aws_account_setup/4_account_settings/",
	"title": "계정 구성 설정",
	"tags": [],
	"description": "",
	"content": "계정 연락처가 최신 상태인지 확인하는 것은 중요합니다. 이를 통해 AWS는 필요한 경우 조직의 올바른 담당자에게 연락 할 수 있습니다. 중복성을 위해 여러 팀 구성원이 액세스 할 수있는 메일링 리스트 또는 공유 이메일을 사용하는 것이 좋습니다. 이메일 계정을 적극적으로 모니터링하십시오.\n  올바른 권한을 가진 마스터계정의 IAM사용자로 로그인을 한 후, 오른쪽 상단의 계정 이름을 선택하고, 메뉴의 My Account 를 클릭합니다:   스크롤을 내려 Alternate Contacts 의 Edit를 클릭합니다:   Billing, Operations 와 Security의 정보를 입력한 후 Update를 클릭합니다:   "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/100_aws_resource_optimization/5_ec2_rs_best_practices/",
	"title": "Amazon EC2 올바른 크기를 위한 모범사례",
	"tags": [],
	"description": "",
	"content": "  시작은 간단하게: 유휴리소스는와 중요하지 않은 개발/QA 및 이전 세대 인스턴스의 비용절감은 식별하기 쉽고 테스트 빠르게 적용해볼 수 있습니다(Amazon EC2 시작시간 통계는 다른 인스턴스보다 오래 실행 된 인스턴스를 식별하는 데 사용될 수 있습니다).\n  마이그레이션을 진행하기 전에 올바른 크기를 먼저 식별하는게 좋습니다: 시간을 절약하기 위해 올바른 크기 조정을 건너 뛰면 마이그레이션 속도가 증가 할 수는 있지만 잠재적으로 더 긴 시간 동안 더 많은 클라우드 인프라 지출이 발생할 가능성이 있습니다. 대신 마이그레이션 연습 중에 테스트 및 QA주기를 활용하여 여러 인스턴스 유형 및 제품군을 테스트하십시오. 또한 \u0026ldquo;t\u0026quot;제품군과 같이 다양한 크기와 버스트 가능한 인스턴스를 테스트 할 수있는 기회를 가지십시오.\n  가장 적합한 올바른 크기를 적용하는 것은 Day 1부터 시작합니다: 적절한 사이징 분석을 수행하고 궁극적으로 리소스의 규모를 적절하게 조정하면 모든 학습 내용이 조직 전체에서 공유되어 새로운 워크로드 설계 및 향후 마이그레이션에 큰 도움을 줄 수 있습니다.\n  Measure Twice, Cut Once: Test, then test some more: 우리가 찾아야하는 것은 새 자원 유형이 로드를 처리 할 수 없거나 잘못 작동하는 것입니다.\n  Test once and perform multiple right sizing: 자동 크기 조정 그룹 및 태그별 인스턴스를 집계하여 올바른 크기 조정 활동을 확장합니다.\n  예약 인스턴스 또는 세이빙플랜을 사용하여 적절한 크기와 결합하여 절약 효과를 극대화하십시오: 표준 RI 및 EC2 인스턴스 SP의 경우 : 올바른 크기조절을 수행한 다음 적절한 구매모델을 선택하고, 컨버터블 RI를 사용하는 경우, 올바른 크기로 교환하세요. 컴퓨트 세이빙 플랜은 새로운 환경에 맞춰 자동으로 조정합니다.\n  버스팅 가능한 인스턴트 타입은 무시하기(T types): 이러한 제품군은 일반적으로 상당한 시간 동안 낮은 CPU 비율로 실행되도록 설계되었으며 올바른 크기를 찾기 위해 분석되는 인스턴스 유형은 아닙니다.\n  "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/operational-excellence/100_inventory_patch_management/5_patch_mgmt/",
	"title": "Patch Management",
	"tags": [],
	"description": "",
	"content": "Systems Manager: Patch Manager AWS Systems Manager Patch Manager automates the process of patching managed instances with security related updates.\n NoteFor Linux-based instances, you can also install patches for non-security updates.\n You can patch fleets of Amazon EC2 instances or your on-premises servers and virtual machines (VMs) by operating system type. This includes supported versions of Windows, Ubuntu Server, Red Hat Enterprise Linux (RHEL), SUSE Linux Enterprise Server (SLES), and Amazon Linux. You can scan instances to see only a report of missing patches, or you can scan and automatically install all missing patches. You can target instances individually or in large groups by using Amazon EC2 tags.\n Warning\n AWS does not test patches for Windows or Linux before making them available in Patch Manager . If any updates are installed by Patch Manager the patched instance is rebooted. Always test patches thoroughly before deploying to production environments.   Patch Baselines Patch Manager uses patch baselines, which include rules for auto-approving patches within days of their release, as well as a list of approved and rejected patches. Later in this lab we will schedule patching to occur on a regular basis using a Systems Manager Maintenance Window task. Patch Manager integrates with AWS Identity and Access Management (IAM), AWS CloudTrail, and Amazon CloudWatch Events to provide a secure patching experience that includes event notifications and the ability to audit usage.\n WarningThe operating systems supported by Patch Manager may vary from those supported by the SSM Agent.\n 5.1 Create a Patch Baseline  Under Instances and Nodes in the AWS Systems Manager navigation bar, choose Patch Manager. Click the View predefined patch baselines link under the Configure patching button on the upper right. Choose Create patch baseline. On the Create patch baseline page in the Provide patch baseline details section:  Enter a Name for your custom patch baseline, such as AmazonLinuxSecAndNonSecBaseline. Optionally enter a description, such as Amazon Linux patch baseline including security and non-security patches. Select Amazon Linux from the list.   In the Approval rules section:  Examine the options in the lists and ensure that Product, Classification, and Severity have values of All. Leave the Auto approval delay at its default of 0 days. Change the value of Compliance reporting - optional to Critical. Choose Add another rule. In the new rule, change the value of Compliance reporting - optional to Medium. Check the box under Include non-security updates to include all Amazon Linux updates when patching.    If an approved patch is reported as missing, the option you choose in Compliance reporting, such as Critical or Medium, determines the severity of the compliance violation reported in System Manager Compliance.\nIn the Patch exceptions section in the Rejected patches - optional text box, enter system-release.* This will reject patches to new Amazon Linux releases that may advance you beyond the Patch Manager supported operating systems prior to your testing new releases. For Linux operating systems, you can optionally define an alternative patch source repository. Choose the X in the Patch sources area to remove the empty patch source definition. Choose Create patch baseline and you will go to the Patch Baselines page where the AWS provided default patch baselines, and your custom baseline, are displayed.  Patch Groups A patch group is an optional method to organize instances for patching. For example, you can create patch groups for different operating systems (Linux or Windows), different environments (Development, Test, and Production), or different server functions (web servers, file servers, databases). Patch groups can help you avoid deploying patches to the wrong set of instances. They can also help you avoid deploying patches before they have been adequately tested.\nYou create a patch group by using Amazon EC2 tags. Unlike other tagging scenarios across Systems Manager, a patch group must be defined with the tag key: Patch Group (tag keys are case sensitive). You can specify any value (for example, web servers) but the key must be Patch Group.\n NoteAn instance can only be in one patch group.\n After you create a patch group and tag instances, you can register the patch group with a patch baseline. By registering the patch group with a patch baseline, you ensure that the correct patches are installed during the patching execution. When the system applies a patch baseline to an instance, the service checks if a patch group is defined for the instance.\n If the instance is assigned to a patch group, the system checks to see which patch baseline is registered to that group. If a patch baseline is found for that group, the system applies that patch baseline. If an instance isn\u0026rsquo;t assigned to a patch group, the system automatically uses the currently configured default patch baseline.  5.2 Assign a Patch Group  Choose the Baseline ID of your newly created baseline to enter the details screen. Choose Actions in the top right of the window and select Modify patch groups. In the Modify patch groups window under Patch groups, enter Critical, choose Add, and then choose Close to be returned to the Patch Baseline details screen.  AWS-RunPatchBaseline AWS-RunPatchBaseline is a command document that enables you to control patch approvals using patch baselines. It reports patch compliance information that you can view using the Systems Manager Compliance tools. For example,you can view which instances are missing patches and what those patches are.\nFor Linux operating systems, compliance information is provided for patches from both the default source repository configured on an instance and from any alternative source repositories you specify in a custom patch baseline. AWS-RunPatchBaseline supports both Windows and Linux operating systems.\nAWS Systems Manager: Document An AWS Systems Manager document defines the actions that Systems Manager performs on your managed instances. Systems Manager includes many pre-configured documents that you can use by specifying parameters at runtime, including \u0026lsquo;AWS-RunPatchBaseline\u0026rsquo;. These documents use JavaScript Object Notation (JSON) or YAML, and they include steps and parameters that you specify.\nAll AWS provided Automation and Run Command documents can be viewed in AWS Systems Manager Documents. You can create your own documents or launch existing scripts using provided documents to implement custom operations as code activities.\n5.3 Examine AWS-RunPatchBaseline in Documents To examine AWS-RunPatchBaseline in Documents:\n In the AWS Systems Manager navigation bar under Shared Resources, choose Documents. Click in the search box, select Document name prefix, and then Equal. Type AWS-Run into the text field and press Enter on your keyboard to start the search. Select AWS-RunPatchBaseline and choose View details. Review the content of each tab in the details page of the document.  AWS Systems Manager: Run Command AWS Systems Manager Run Command lets you remotely and securely manage the configuration of your managed instances. Run Command enables you to automate common administrative tasks and perform ad hoc configuration changes at scale. You can use Run Command from the AWS Management Console, the AWS Command Line Interface, AWS Tools for Windows PowerShell, or the AWS SDKs.\n5.4 Scan Your Instances with AWS-RunPatchBaseline via Run Command  Under Instances and Nodes in the AWS Systems Manager navigation bar, choose Run Command. In the Run Command dashboard, you will see previously executed commands including the execution of AWS-RefreshAssociation, which was performed when you set up inventory. (Optional) choose a Command ID from the list and examine the record of the command execution. Choose Run Command in the top right of the window. In the Run a command window, under Command document:  Choose the search icon and select Platform types, and then choose Linux to display all the available commands that can be applied to Linux instances. Choose AWS-RunPatchBaseline in the list.   In the Command parameters section, leave the Operation value as the default Scan. In the Targets section:  Under Specify targets by, choose Specifying a tag to reveal the Tags sub-section. Under Enter a tag key, enter Workload, and under Enter a tag value, enter Test and click Add.    The remaining Run Command features enable you to:\n Specify Rate control, limiting Concurrency to a specific number of targets or a calculated percentage of systems, or to specify an Error threshold by count or percentage of systems after which the command execution will end. Specify Output options to record the entire output to a preconfigured S3 bucket and optional S3 key prefix.   NoteOnly the last 2500 characters of a command document\u0026rsquo;s output are displayed in the console.\n  Specify SNS notifications to a specified SNS Topic on all events or on a specific event type for either the entire command or on a per-instance basis. This requires Amazon SNS to be preconfigured. View the command as it would appear if executed within the AWS Command Line Interface.   Choose Run to execute the command and return to its details page. Scroll down to Targets and outputs to view the status of the individual targets that were selected through your tag key and value pair. Refresh your page to update the status. Choose an Instance ID from the targets list to view the Output from command execution on that instance. Choose Step 1 - Output to view the first 2500 characters of the command output from Step 1 of the command, and choose Step 1 - Output again to conceal it. Choose Step 2 - Output to view the first 2500 characters of the command output from Step 2 of the command. The execution step for PatchWindows was skipped as it did not apply to your Amazon Linux instance. Choose Step 1 - Output again to conceal it.  5.5 Review Initial Patch Compliance  Under Instances \u0026amp; Nodes in the the AWS Systems Manager navigation bar, choose Compliance. On the Compliance page in the Compliance resources summary, you will now see that there are 4 systems that have critical severity compliance issues. In the Resources list, you will see the individual compliance status and details.  5.6 Patch Your Instances with AWS-RunPatchBaseline via Run Command  Under Instances and Nodes in the AWS Systems Manager navigation bar, choose Run Command. Choose Run Command in the top right of the window. In the Run a command window, under Command document:  Choose the search icon, select Platform types, and then choose Linux to display all the available commands that can be applied to Linux instances. Choose AWS-RunPatchBaseline in the list.   In the Targets section:  Under Specify targets by, choose Specifying a tag to reveal the Tags sub-section. Under Enter a tag key, enter Workload and under Enter a tag value enter Test.   In the Command parameters section, change the Operation value to Install. In the Targets section, choose Specify a tag using Workload and Test.   Note You could have choosen Manually selecting instances and used the check box at the top of the list to select all instances displayed, or selected them individually.\n  Note there are multiple pages of instances. If manually selecting instances, individual selections must be made on each page.\n  In the Rate control section:  For Concurrency, ensure that targets is selected and specify the value as 1.   TipLimiting concurrency will stagger the application of patches and the reboot cycle, however, to ensure that your instances are not rebooting at the same time, create separate tags to define target groups and schedule the application of patches at separate times.\n For Error threshold, ensure that error is selected and specify the value as 1.   Choose Run to execute the command and to go to its details page. Refresh the page to view updated status and proceed when the execution is successful.   WarningRemember, if any updates are installed by Patch Manager, the patched instance is rebooted.\n 5.7 Review Patch Compliance After Patching  Under Instances \u0026amp; Nodes in the the AWS Systems Manager navigation bar, choose Compliance. The Compliance resources summary will now show that there are 4 systems that have satisfied critical severity patch compliance.  In the optional Scheduling Automated Operations Activities section of this lab you can set up Systems Manager Maintenance Windows and schedule the automated application of patches.\nThe Impact of Operations as Code In a traditional environment, you would have had to set up the systems and software to perform these activities. You would require a server to execute your scripts. You would need to manage authentication credentials across all of your systems.\nOperations as code reduces the resources, time, risk, and complexity of performing operations tasks and ensures consistent execution. You can take operations as code and automate operations activities by using scheduling and event triggers. Through integration at the infrastructure level you avoid \u0026ldquo;swivel chair\u0026rdquo; processes that require multiple interfaces and systems to complete a single operations activity.\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/100_1_aws_account_setup/5_cur/",
	"title": "비용 및 사용 보고서(CUR) 설정",
	"tags": [],
	"description": "",
	"content": "AWS 비용 및 사용 보고서란 무엇입니까?  AWS 비용 및 사용 보고서(AWS CUR)에는 사용 가능한 가장 포괄적인 비용 및 사용 데이터 집합이 포함되어 있습니다. 비용 및 사용 보고서를 사용하여 소유한 Amazon Simple Storage Service(Amazon S3) 버킷에 AWS 결제 보고서를 게시할 수 있습니다. 시간이나 월, 제품이나 제품 리소스, 또는 직접 정의한 태그를 기준으로 비용을 구분한 보고서를 받을 수 있습니다. AWS는 이 보고서를 하루에 한 번 CSV(쉼표로 분리된 값) 형식으로 버킷에 업데이트합니다. Microsoft Excel, Apache OpenOffice Calc와 같은 스프레드시트 소프트웨어를 사용하여 보고서를 보거나 애플리케이션에서 Amazon S3 API를 사용하여 액세스할 수 있습니다.\nAWS 비용 및 사용 보고서은 AWS 사용량을 추적하고 계정과 관련된 예상 요금을 알려줍니다. 각 보고서에는 AWS 제품, 사용 유형, AWS 계정에서 사용하는 작업에 대해 각각 고유하게 조합된 항목들이 포함되어 있습니다. AWS 비용 및 사용 보고서을 사용자 지정하여 정보를 시간별 또는 일별로 집계할 수 있습니다.\n 비용 및 사용 보고서는 사용 및 청구서에 대한 가장 자세한 정보를 제공합니다. 매일 1 시간마다 자원 당 1 개의 보고서를 제공하도록 구성 할 수 있습니다. 사용량 및 청구 정보에 액세스하고 분석 할 수 있도록 구성해야합니다.\n비용 및 사용 보고서 설정 여러 비용 및 사용 보고서(CURs)를 사용한다면 1개의 CUR당 하나의 버킷을 사용할 것을 권장드립니다. 단일 버킷에 여러 CUR이 있어야하는 경우 보고서의 경로에 전치사를 사용하여 다른 보고서와 구분할 수 있도록 해야합니다.\nAWS Organization를 생성한 마스터계정으로 진행합니다.\n   올바른 권한을 가진 마스터계정의 IAM사용자로 로그인을 한 후, 콘솔의 Billing을 검색하여 선택합니다:   왼쪽 메뉴의 Cost \u0026amp; Usage Reports를 선택합니다:   Create report를 선택합니다.:   Report name 을 입력하고(masterCUR), Include resource IDs 와 Data refresh settings를 선택합니다. Next 버튼을 누릅니다:   Configure를 클릭합니다:   유니크한 버킷이름을 입력하고 리전이 정확한지 확인합니다. 그리고 Next를 클릭합니다:   정책을 읽어보고 확인하세요. 이것은 해당 버킷에 빌링 보고서를 저장권한을 할당합니다. I have confirmed that this policy is correct를 클릭하고 Save 클릭하세요:   검증과 설정:\n   버킷 요구사항의 Valid Bucket이 녹색으로 체크되어있는지 확인하세요(만약 아니라면 버킷 정책을 확인하세요) \u0026lsquo;/\u0026rsquo; 없이 Report path prefix를 입력하세요 (어떤 글자든 상관 없습니다.) Time Granularity 가 Hourly인지 확인하세요. Report Versioning 는 Overwrite existing report로 설정하세요. Enable report data integration for 아래 Amazon Athena를 선택하고 Next클릭합니다:   설정을 확인한 후, 스크롤을 내려 Review and Complete를 클릭하세요:   비용 및 사용 보고서가 전달되도록 성공적으로 구성했습니다. 첫 번째 보고서를 생성하여 받는데 최대 24 시간이 걸릴 수 있습니다.\nS3 비용을 최소화하기 위해 CUR은 압축됩니다.\n CUR 버킷 설정 워크로드 계정이 CUR에 액세스 할 수 있도록 CUR버킷을 업데이트합니다.\n  S3콘솔로가서, CUR Bucket을 선택하고, Permissions을 선택합니다.:   Bucket Policy을 클릭합니다:   워크로드 계정의 S3 읽기 권한을 추가하기위해 아래와 같은 정책을 현재 버킷에 추가 할 것입니다. 버킷정책의 (sub account ID) 와 (CUR bucket) 을 수정한 뒤 버킷정책을 업데이트합니다.\n { \u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;, \u0026quot;Principal\u0026quot;: { \u0026quot;AWS\u0026quot;: \u0026quot;arn:aws:iam::(sub account ID):root\u0026quot; }, \u0026quot;Action\u0026quot;: \u0026quot;s3:ListBucket\u0026quot;, \u0026quot;Resource\u0026quot;: \u0026quot;arn:aws:s3:::(CUR bucket)\u0026quot; }, { \u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;, \u0026quot;Principal\u0026quot;: { \u0026quot;AWS\u0026quot;: \u0026quot;arn:aws:iam::(sub account ID):root\u0026quot; }, \u0026quot;Action\u0026quot;: \u0026quot;s3:GetObject\u0026quot;, \u0026quot;Resource\u0026quot;: \u0026quot;arn:aws:s3:::(CUR bucket)/*\u0026quot; }      클릭하여 완성된 정책 예제 보기   { \u0026quot;Version\u0026quot;: \u0026quot;2008-10-17\u0026quot;, \u0026quot;Id\u0026quot;: \u0026quot;123\u0026quot;, \u0026quot;Statement\u0026quot;: [ { \u0026quot;Sid\u0026quot;: \u0026quot;Stmt1335892150622\u0026quot;, \u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;, \u0026quot;Principal\u0026quot;: { \u0026quot;AWS\u0026quot;: \u0026quot;arn:aws:iam::386209384616:root\u0026quot; }, \u0026quot;Action\u0026quot;: [ \u0026quot;s3:GetBucketAcl\u0026quot;, \u0026quot;s3:GetBucketPolicy\u0026quot; ], \u0026quot;Resource\u0026quot;: \u0026quot;arn:aws:s3:::(CUR Bucket)\u0026quot; }, { \u0026quot;Sid\u0026quot;: \u0026quot;Stmt1335892526596\u0026quot;, \u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;, \u0026quot;Principal\u0026quot;: { \u0026quot;AWS\u0026quot;: \u0026quot;arn:aws:iam::386209384616:root\u0026quot; }, \u0026quot;Action\u0026quot;: \u0026quot;s3:PutObject\u0026quot;, \u0026quot;Resource\u0026quot;: \u0026quot;arn:aws:s3:::(CUR Bucket)/*\u0026quot; }, { \u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;, \u0026quot;Principal\u0026quot;: { \u0026quot;AWS\u0026quot;: \u0026quot;arn:aws:iam::(Sub Account ID):root\u0026quot; }, \u0026quot;Action\u0026quot;: \u0026quot;s3:ListBucket\u0026quot;, \u0026quot;Resource\u0026quot;: \u0026quot;arn:aws:s3:::(CUR Bucket)\u0026quot; }, { \u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;, \u0026quot;Principal\u0026quot;: { \u0026quot;AWS\u0026quot;: \u0026quot;arn:aws:iam::(Sub Account ID):root\u0026quot; }, \u0026quot;Action\u0026quot;: \u0026quot;s3:GetObject\u0026quot;, \u0026quot;Resource\u0026quot;: \u0026quot;arn:aws:s3:::(CUR Bucket)/*\u0026quot; } ] }    S3 오브젝트 ACL의 덮어쓰기 설정 이제 새로 제공되는 CUR 파일에서 ACL을 다시 작성하도록 Lambda 함수를 설정할 것입니다. 이것은 CUR파일의 읽기 권한이 버킷소유자(마스터계정)의 접근권한으로만 제공되므로 하위 계정이 CUR파일을 읽을 수 있도록하는 데 필요합니다.\n  IAM 대시보드로 갑니다.\n  Policies를 선택한 후, Create policy를 클릭합니다:   JSON을 클릭합니다. 아래와 같이 정책을 수정합니다. - (bucket name) 은 CUR버킷으로 수정하고, Review policy를 클릭합니다:\n{ \u0026quot;Version\u0026quot;: \u0026quot;2012-10-17\u0026quot;, \u0026quot;Statement\u0026quot;: [ { \u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;, \u0026quot;Action\u0026quot;: [ \u0026quot;s3:PutObjectVersionAcl\u0026quot;, \u0026quot;s3:PutObjectAcl\u0026quot; ], \u0026quot;Resource\u0026quot;: \u0026quot;arn:aws:s3:::(bucket name)/*\u0026quot; } ] }     이름에 Lambda_S3Linked_PutACL을 입력하고 Description에 Policy to allow Lambda to re-write CUR ACLs in S3를 입력한 후 Create policy를 클릭합니다:   Roles을 클릭하고, Create role을 클릭합니다:   use case에서 Lambda를 선택한 후, Next: Permissions를 클릭합니다:   Lambda_S3Linked_PutACL 정책을 검색하고, 체크한 뒤 Next: Tags를 클릭합니다:   Next: Review를 클릭합니다.\n  Role name에 Lambda_Put_Linked_S3ACL, Role description에 Allows lambda function to call AwS services on your behalf를 입련한 다음 Create role을 클릭합니다:   Lambda의 서비스 대시보드로 간 다음 Create function을 클릭합니다:   Author from scratch 를 선택한 후, function name 에 S3LinkedPutACL를 입력하고, 런타임은 Node.js 12.x, Execution role은 Use an existing role을 선택합니다. 그리고 Existing role은 Lambda_Put_Linked_S3ACL을 선택한 다음Create function을 클릭합니다:   다음의 람다 코드를 붙여넣습니다. 아래 값들은 수정하여 붙여넣습니다:\n   Master Account Name: 마스터 오너 계정의 이름 - email에서 @뒷부분을 제외한 아이디를 적습니다.이 계정은 FULL_CONTROL 권한을 얻습니다. Master Canonical ID: 마스터 오너의 canonical ID, 12자리 숫자로된 아이디를 말합니다. 아이디를 확인하는 방법은 이곳 https://docs.aws.amazon.com/general/latest/gr/acct-identifiers.html에 있습니다. Linked Account Name: 워크로드 계정 아이디 - email에서 @뒷부분을 제외한 아이디를 적습니다.이 계정은 READ 권한을 얻습니다. Linked Account Canonical ID: 워크로드 계정의 canonical ID    클릭 확장하여 람다 코드 전체보기   const AWS = require('aws-sdk'); const util = require('util'); // Main Loop exports.handler = function(event, context, callback) { // If its an object delete, do nothing if (event.RequestType === 'Delete') { } else // Its an object put { // Get the source bucket from the S3 event var srcBucket = event.Records[0].s3.bucket.name; // Object key may have spaces or unicode non-ASCII characters, decode it var srcKey = decodeURIComponent(event.Records[0].s3.object.key.replace(/\\+/g, \u0026quot; \u0026quot;)); // Gets the top level folder, which is the key for the permissions array var folderID = srcKey.split(\u0026quot;/\u0026quot;)[0]; // Define the object permissions, using the permissions array var params = { Bucket: srcBucket, Key: srcKey, AccessControlPolicy: { 'Owner': { 'DisplayName': 'aws-billpresentation+artifact-storage', 'ID': '72b999b38bdff6b040374efc3086ba5a0a87c0c07e1eda14fe56fadb2b4a6ef0' }, 'Grants': [ { 'Grantee': { 'Type': 'CanonicalUser', 'DisplayName': '(master account name)', 'ID': '(master canonical id)' }, 'Permission': 'FULL_CONTROL' }, { 'Grantee': { 'Type': 'CanonicalUser', 'DisplayName': '(linked account name)', 'ID': '(linked canonical id)' }, 'Permission': 'READ' }, ] } }; // get reference to S3 client var s3 = new AWS.S3(); // Put the ACL on the object s3.putObjectAcl(params, function(err, data) { if (err) console.log(err, err.stack); // an error occurred else console.log(data); // successful response }); } };     Save버튼을 클릭합니다:   S3 service dashboard로 가서, 당신의 CUR 버킷을 클릭한 후 Properties클릭하세요:   Events를 선택하고, Add notification을 클릭합니다:   이름에 S3PutACL을 입력하고 All object create events를 선택합니다, Send to에 Lambda Function를 선택하고, Lambda function은 S3LinkedPutACL를 선택한 후 Save를 누릅니다:   AWS가 다음 CUR 파일을 제공 할 때까지(최대 24시간)기다려야합니다. 최신 CUR파일로 이동하여 권한을 확인하면 원본소유자(AWS), 전체 권한이있는 마스터계정 (원본 별) 및 연결 된 비용최적화팀 계정이 읽기권한으로 표시됩니다.   이미 존재하는 CURs 업데이트 업데이트 할 권한이 필요한 다른 보고서의 기존 CUR이있는 경우 다음 CLI를 사용하여 개체와 권한을 직접 복사 하여 업데이트합니다.\naws s3 cp --recursive s3://(CUR bucket) s3://(CUR bucket) --grants read=id=(sub account canonical ID) full=id=(master account canonical ID) --storage-class STANDARD  축하합니다. 이제 워크로드 계정에서 CUR을 제공하고 액세스 할 수 있습니다.\n "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/200_aws_resource_optimization/5_ec2_updated_rec/",
	"title": "업데이트 된 Amazon EC2 리소스 최적화 권장 사항",
	"tags": [],
	"description": "",
	"content": " 이 실습은 실제 사용 계정에서 진행 해보세요. 현재 Lab환경으로는 수행하실 수 없습니다.\n 이 단계를 완료하려면 Amazon EC2 리소스 최적화를 활성화해야합니다. AWS Cost Explorer, 권장 사항 (왼쪽 리스트) 섹션으로 이동하면됩니다.\n 인스턴스에 CloudWatch 에이전트를 방금 설치 한 경우 Amazon EC2 Resource Optimization에서 업데이트 된 권장 사항을 제공하는 데 며칠이 걸릴 수 있으므로 첫 번째 확인 중에 메모리 데이터가 표시되지 않더라도 걱정하지 마십시오.\n CloudWatch에 메모리 데이터를 사용자 지정지표로 사용 했으므로 Amazon EC2 리소스 최적화 권장사항에 어떤 영향을 미치는지 확인하겠습니다.\nAmazon EC2 Resource Optimization은 추가 비용없이 AWS 비용 탐색기에서 적정크기 조정 권장사항을 제공합니다. 이러한 권장 사항은 계정, 리전 및 태그에서 유휴상태이거나 사용률이 낮은 인스턴스를 식별합니다. 이러한 권장사항을 생성하기 위해 AWS는 과거 EC2 리소스 사용량(Amazon CloudWatch를 사용, 최근 14 일)과 기존 예약자원의 기록을 분석하여 비용 절감기회를 식별합니다. 권장되는 조치에는 두 가지 유형이 있습니다. 인스턴스가 유휴상태(최대 CPU 사용률이 1%이하)인 경우 종료하거나 인스턴스 사용률이 낮을 경우 (최대 CPU 사용률이 1 %-40 %)다운사이즈를 권장합니다.\n기본적으로 Amazon EC2 리소스 최적화는 권장사항을 제공하기 위해 메모리 데이터 포인트가 필요하지 않지만, 해당정보가 사용 가능한 경우 현재 최대 CPU 및 MEM사용률이 1% 에서 40% 사이 인 인스턴스에 대한 다운사이즈 권장사항 업데이트를 고려해야합니다. 다음 단계를 통해 이를 확인하십시오.\n  AWS Cost Explorer 로 갑니다.   왼쪽 메뉴의 Recommendations 를 선택합니다.   Amazon EC2 Resource Optimization Recommendations의 View All을 클릭합니다.   Amazon EC2 리소스 최적화를 활성화하지 않은 경우, 활성화 한 시점부터 첫 번째 권장사항을 생성하는 데 최대 24시간이 걸릴 수 있습니다. 일반 또는 마스터(지불)계정만 사용 가능하며, 마스터(지불)계정이 설정 페이지(오른쪽 위)에서 특별히 금지하지 않는 한 기본적으로 연결된 계정과 마스터(지불)계정 모두 권한부여 권장사항에 접근 할 수 있습니다.\nAmazon EC2 리소스 최적화 권장사항을 활성화했다면, 권장사항(있는 경우)을 제공하는 화면이 표시됩니다. 자원 최적화 권장사항을 보려면 클릭하십시오.   Optimization opportunities – 사용가능한 권장사항 Estimated monthly savings – 제공된 각 권장사항과 관련된 예상 월별 절감액의 합계 Estimated savings (%) – 권장사항의 인스턴스와 Amazon EC2 비용(온디맨드)과 비교하여 나타나는 절감액  작업 유형별(유휴 및 낮은 사용율), 연결된계정, 지역 및 태그별로 권장 사항을 필터링 할 수도 있습니다.\nAmazon EC2 리소스 최적화 권장 사항 이해.  In the example below we have a recommendation to downsize the t2.micro (1vCPU for a 2h 24m burst and 1GB RAM) to a t2.nano (1vCPU for a 1h 12m burst and 0.5 GB RAM) and save $12 USD per year.\n아래 예에서는 t2.micro(1vCPU당 2시간24분 버스트 및 1GB RAM의)를 t2.nano(1vCPU당 1시간12분 버스트 및 0.5GB RAM)로 축소하고 연간 $12USD를 절약 할 것을 권장합니다. 지난 14 일 동안이 인스턴스의 최대 CPU 사용률은 9%에 불과했으며,인스턴스는 86시간 동안 실행되었습니다. 그리고 모두 On-Demand 로 사용되었습니다. 사용 가능한 메모리 정보가 없으므로 Amazon EC2 Resource Optimization은 해당 데이터 포인트를 무시하고 t2.micro에서 사용 가능한 메모리의 절반인 t2.nano로 축소하는 것.을 권장합니다.\n제안된 적정 크기 조정 옵션이 유효한지 테스트 할 땐 위험할 수도있고 시간이 낭비될 수도 있습니다. 방금 설치 한 CloudWatch 에이전트를 사용하면이 권장사항의 정확성을 향상시킬 수 있습니다.\n이 다른 예에서는 r5.8xlarge(32vCPU 및 256GB RAM)를 r5.4xlarge (16vCPU 및 128GB RAM)로 축소하고 연간 $2,412 USD를 절약 할 것을 권장합니다. 이 경우 CPU 및 메모리 정보를 모두 사용할 수 있습니다. 최대 CPU 사용률은 21%이고 메모리는 5%에 ​​불과합니다. 따라서 크기 축소의 경우가 훨씬 강력하고 권장사항에 따라 새 인스턴스 크기의 CPU 및 메모리 사용률을 추정 할 수도 있습니다. 이는 CloudWatch의 과거 사용량 데이터를 기반으로 한 간단한 추정 일 뿐이므로 수정을 실행하기 전에 필요한 모든 부하 테스트를 수행하여 워크로드에 영향을 미치지 않도록해야합니다.\n위에서 설명한 것처럼 Amazon EC2 리소스 최적화 로직은 지난 14 일 동안 최대 CPU 사용률이 1%에서 40% 사이 인 인스턴스를 축소하는 것이 좋습니다. 사용 가능한 메모리 정보가있는 경우 Amazon EC2 Resource Optimization은 이제 CPU 및 메모리 최대 활용률이 1 %에서 40% 사이 인 인스턴스의 크기를 줄이는 것을 고려합니다. 메모리 데이터를 사용할 수 있는 경우 유휴 권장사항이 영향을받지 않으므로 지난 14 일 동안 CPU utlization의 1%를 통과하지 못한 EC2 인스턴스는 자동으로 유휴 상태로 플래그가 지정됩니다.\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/200_aws_resource_optimization/6_ec2_rs_best_practices/",
	"title": "AMAZON EC2 올바를 크기를 위한 모범사례",
	"tags": [],
	"description": "",
	"content": "  시작은 간단하게: 유휴리소스는와 중요하지 않은 개발/QA 및 이전 세대 인스턴스의 비용절감은 식별하기 쉽고 테스트 빠르게 적용해볼 수 있습니다(Amazon EC2 시작시간 통계는 다른 인스턴스보다 오래 실행 된 인스턴스를 식별하는 데 사용될 수 있습니다).\n  마이그레이션을 진행하기 전에 올바른 크기를 먼저 식별하는게 좋습니다: 시간을 절약하기 위해 올바른 크기 조정을 건너 뛰면 마이그레이션 속도가 증가 할 수는 있지만 잠재적으로 더 긴 시간 동안 더 많은 클라우드 인프라 지출이 발생할 가능성이 있습니다. 대신 마이그레이션 연습 중에 테스트 및 QA주기를 활용하여 여러 인스턴스 유형 및 제품군을 테스트하십시오. 또한 \u0026ldquo;t\u0026quot;제품군과 같이 다양한 크기와 버스트 가능한 인스턴스를 테스트 할 수있는 기회를 가지십시오.\n  가장 적합한 올바른 크기를 적용하는 것은 Day 1부터 시작합니다: 적절한 사이징 분석을 수행하고 궁극적으로 리소스의 규모를 적절하게 조정하면 모든 학습 내용이 조직 전체에서 공유되어 새로운 워크로드 설계 및 향후 마이그레이션에 큰 도움을 줄 수 있습니다.\n  Measure Twice, Cut Once: Test, then test some more: 우리가 찾아야하는 것은 새 자원 유형이 로드를 처리 할 수 없거나 잘못 작동하는 것입니다.\n  Test once and perform multiple right sizing: 자동 크기 조정 그룹 및 태그별 인스턴스를 집계하여 올바른 크기 조정 활동을 확장합니다.\n  예약 인스턴스 또는 세이빙플랜을 사용하여 적절한 크기와 결합하여 절약 효과를 극대화하십시오: 표준 RI 및 EC2 인스턴스 SP의 경우 : 올바른 크기조절을 수행한 다음 적절한 구매모델을 선택하고, 컨버터블 RI를 사용하는 경우, 올바른 크기로 교환하세요. 컴퓨트 세이빙 플랜은 새로운 환경에 맞춰 자동으로 조정합니다.\n  버스팅 가능한 인스턴트 타입은 무시하기(T types): 이러한 제품군은 일반적으로 상당한 시간 동안 낮은 CPU 비율로 실행되도록 설계되었으며 올바른 크기를 찾기 위해 분석되는 인스턴스 유형은 아닙니다.\n  "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/100_1_aws_account_setup/6_quicksight/",
	"title": "Amazon QuickSight 설정",
	"tags": [],
	"description": "",
	"content": "이제 워크로드 계정의 사용자가 분석 및 대시보드를 만들 수 있도록 Amazon QuickSight를 설정할 것입니다.\n첫 QuickSight 설정   워크로드 계정의 IAM 사용자로 콘솔에 로그인합니다. 그리고 Amazon QuickSight 콘솔로 이동합니다:   이전에 QuickSight의 Sign up for QuickSight를 진행했다면, Setup QuickSight IAM Policy 으로 바로 건너 뛰어도 됩니다:   Standard 에디션을 선택하고 Continue를 클릭합니다:   CUR 파일이 있는 region을 선택합니다. QuickSight account name에 계정이름, Notification email address에 email을 입력합니다. 그리고 Amazon Athena 를 선택한 후 Choose S3 buckets을 클릭합니다:   S3 Buckets You Can Access Across AWS을 클릭하고, 아래 Use a different bucket에 CUR bucket 이름을 입력합니다, Add S3 bucket을 클릭하고 Finish를 클릭합니다:   Finish를 클릭합니다:   QuickSight IAM 정책 설정   IAM Dashboard로 갑니다.\n  Policies를 클릭하고 검색창에 AWSQuickSightS3Policy를 검색한 뒤, 검색결과 AWSQuickSightS3Policy 선택하세요:   Edit policy를 클릭합니다. 그리고 아래와 같이 S3의 Resource에 arn:aws:s3:::cost*를 추가합니다.\n  이것은 QuickSight가 s3 버킷이 cost로 시작한다면 모두 접근이 가능하게되며, 비용최적화 사용자는추가적인 QuickSight권한 없이도 데이터셋을 쉽게 생성할 수 있게됩니다. Review policy를 클릭합니다.   Save changes를 클릭합니다:   축하합니다 - 이제 QuickSight를 설정을 완료했습니다. 비용최적화팀은 QuickSight를 자체 관리하고 올바른 버킷 이름으로 S3의 데이터 세트에 액세스 할 수 있습니다.\n "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/operational-excellence/100_inventory_patch_management/6_maintenance_windows/",
	"title": "Creating Maintenance Windows and Scheduling Automated Operations Activities",
	"tags": [],
	"description": "",
	"content": "AWS Systems Manager: Maintenance Windows AWS Systems Manager Maintenance Windows let you define a schedule for when to perform potentially disruptive actions on your instances such as patching an operating system (OS), updating drivers, or installing software. Each Maintenance Window has a schedule, a duration, a set of registered targets, and a set of registered tasks. With Maintenance Windows, you can perform tasks like the following:\n Installing applications, updating patches, installing or updating SSM Agent, or executing PowerShell commands and Linux shell scripts by using a Systems Manager Run Command task Building Amazon Machine Images (AMIs), boot-strapping software, and configuring instances by using Systems Manager Automation Executing AWS Lambda functions that trigger additional actions such as scanning your instances for patch updates Running AWS Step Function state machines to perform tasks such as removing an instance from an Elastic Load Balancing environment, patching the instance, and then adding the instance back to the Elastic Load Balancing environment   NoteTo register Step Function tasks you must use the AWS CLI.\n 6.1 Setting up Maintenance Windows  Create the role that allows Systems Manager to tasks in Maintenance Windows on your behalf:  Navigate to the IAM console. In the navigation pane, choose Roles, and then choose Create role. In the Select type of trusted entity section, verify that the default AWS service is selected. In the Choose the service that will use this role section, choose EC2. This allows EC2 instances to call AWS services on your behalf. Choose Next: Permissions.   Under Attached permissions policy:  Search for AmazonSSMMaintenanceWindowRole. Check the box next to AmazonSSMMaintenanceWindowRole in the list. Choose Next: Review.   In the Review section:  Enter a Role name, such as SSMMaintenanceWindowRole. Enter a Role description, such as Role for Amazon SSMMaintenanceWindow. Choose Create role. Upon success you will be returned to the Roles screen.   To enable the service to run tasks on your behalf, we need to edit the trust relationship for this role:  Choose the role you just created to enter its Summary page. Choose the Trust relationships tab. Choose Edit trust relationship. Delete the current policy, and then copy and paste the following policy into the Policy Document field:    { \u0026quot;Version\u0026quot;:\u0026quot;2012-10-17\u0026quot;, \u0026quot;Statement\u0026quot;:[ { \u0026quot;Sid\u0026quot;:\u0026quot;\u0026quot;, \u0026quot;Effect\u0026quot;:\u0026quot;Allow\u0026quot;, \u0026quot;Principal\u0026quot;:{ \u0026quot;Service\u0026quot;:[ \u0026quot;ec2.amazonaws.com\u0026quot;, \u0026quot;ssm.amazonaws.com\u0026quot;, \u0026quot;sns.amazonaws.com\u0026quot; ] }, \u0026quot;Action\u0026quot;:\u0026quot;sts:AssumeRole\u0026quot; } ] } Choose Update Trust Policy. You will be returned to the now updated Summary page for your role. Copy the Role ARN to your clipboard by choosing the double document icon at the end of the ARN.  When you register a task with a Maintenance Window, you specify the role you created, which the service will assume when it runs tasks on your behalf. To register the task, you must assign the IAM PassRole policy to your IAM user account. The policy in the following procedure provides the minimum permissions required to register tasks with a Maintenance Window.\nTo create the IAM PassRole policy for your Administrators IAM user group:  In the IAM console navigation pane, choose Policies, and then choose Create policy. On the Create policy page, in the Select a service area, next to Service choose Choose a service, and then choose IAM. In the Actions section, search for PassRole and check the box next to it when it appears in the list. In the Resources section, choose \u0026ldquo;You choose actions that require the role resource type.\u0026rdquo;, and then choose Add ARN to restrict access. The Add ARN(s) window will open. In the Add ARN(s) window, in the Specify ARN for role field, delete the existing entry, paste in the role ARN you created in the previous procedure, and then choose Add to return to the Create policy window. Choose Review policy. On the Review Policy page, type a name in the Name box, such as SSMMaintenanceWindowPassRole and then choose Create policy. You will be returned to the Policies page.   To assign the IAM PassRole policy to your Administrators IAM user group:  In the IAM console navigation pane, choose Groups, and then choose your Administrators group to reach its Summary page. Under the permissions tab, choose Attach Policy. On the Attach Policy page, search for SSMMaintenanceWindowPassRole, check the box next to it in the list, and choose Attach Policy. You will be returned to the Summary page for the group.    Creating Maintenance Windows To create a Maintenance Window, you must do the following:\n Create the window and define its schedule and duration. Assign targets for the window. Assign tasks to run during the window.  After you complete these steps, the Maintenance Window runs according to the schedule you defined and runs the tasks on the targets you specified. After a task is finished, Systems Manager logs the details of the execution.\n6.2 Create a Patch Maintenance Window First, you must create the window and define its schedule and duration:\n Open the AWS Systems Manager console. In the navigation pane, choose Maintenance Windows and then choose Create a Maintenance Window. In the Provide maintenance window details section:  In the Name field, type a descriptive name to help you identify this Maintenance Window, such as PatchTestWorkloadWebServers. (Optional) you may enter a description in the Description field. Choose Allow unregistered targets if you want to allow a Maintenance Window task to run on managed instances, even if you have not registered those instances as targets.   NoteIf you choose Allow unregistered targets, then you can choose the unregistered instances (by instance ID) when you register a task with the Maintenance Window. If you don\u0026rsquo;t, then you must choose previously registered targets when you register a task with the Maintenance Window.\n  Specify a schedule for the Maintenance Window by using one of the scheduling options:  Under Specify with, accept the default Cron schedule builder. Under Window starts, choose the third option, specify Every Day at, and select a time, such as 02:00. In the Duration field, type the number of hours the Maintenance Window should run, such as \u0026lsquo;3\u0026rsquo; hours. In the Stop initiating tasks field, type the number of hours before the end of the Maintenance Window that the system should stop scheduling new tasks to run, such as 1 hour before the window closes. Allow enough time for initiate activities to complete before the close of the maintenance window.     (Optionally) to have the maintenance window execute more rapidly while engaged with the lab:  Under Window starts, choose Every 30 minutes to have the tasks execute on every hour and every half hour. Set the Duration to the minimum 1 hours. Set the Stop initiation tasks to the minimum 0 hours.   Choose Create maintenance window. The system returns you to the Maintenance Window page. The state of the Maintenance Window you just created is Enabled.  6.3 Assigning Targets to Your Patch Maintenance Window After you create a Maintenance Window, you assign targets where the tasks will run.\n On the Maintenance windows page, choose the Window ID of your maintenance window to enter its Details page. Choose Actions in the top right of the window and select Register targets. On the Register target page under Maintenance window target details:  In the Target Name field, enter a name for the targets, such as TestWebServers. (Optional) Enter a description in the Description field. (Optional) Specify a name or work alias in the Owner information field.   Note: Owner information is included in any CloudWatch Events that are raised while running tasks for these targets in this Maintenance Window.\n  In the Targets section, under Select Targets by:  Choose the default Specifying tags to target instances by using Amazon EC2 tags that were previously assigned to the instances. Under Tags, enter \u0026lsquo;Workload\u0026rsquo; as the key and Test as the value. The option to add and additional tag key/value pair will appear. Add a second key/value pair using InstanceRole as the key and WebServer as the value.   Choose Register target at the bottom of the page to return to the maintenance window details page.  If you want to assign more targets to this window, choose the Targets tab, and then choose Register targetto register new targets. With this option, you can choose a different means of targeting. For example, if you previously targeted instances by instance ID, you can register new targets and target instances by specifying Amazon EC2 tags.\n6.4 Assigning Tasks to Your Patch Maintenance Window After you assign targets, you assign tasks to perform during the window:\n From the details page of your maintenance window, choose Actions in the top right of the window and select Register Run command task. On the Register Run command task page:  In the Name field, enter a name for the task, such as PatchTestWorkloadWebServers. (Optional) Enter a description in the Description field.   In the Command document section:  Choose the search icon, select Platform, and then choose Linux to display all the available commands that can be applied to Linux instances. Choose AWS-RunPatchBaseline in the list. Leave the Task priority at the default value of 1 (1 is the highest priority). Tasks in a Maintenance Window are scheduled in priority order, with tasks that have the same priority scheduled in parallel.   In the Targets section:  For Target by, select Selecting registered target groups. Select the group you created from the list.   In the Rate control section:  For Concurrency, leave the default targets selected and specify 1. For Error threshold, leave the default errors selected and specify 1.   In the Role section, specify the role you defined with the AmazonSSMMaintenanceWindowRole. It will be SSMMaintenanceWindowRole if you followed the suggestion in the instructions above. In Output options, leave Enable writing to S3 clear.  (Optionally) Specify Output options to record the entire output to a preconfigured S3 bucket and optional S3 key prefix   NoteOnly the last 2500 characters of a command document\u0026rsquo;s output are displayed in the console. To capture the complete output define and S3 bucket to receive the logs.\n  In SNS notifications, leave Enable SNS notifications clear.  (Optional) Specify SNS notifications to a preconfigured SNS Topic on all events or a specific event type for either the entire command or on a per-instance basis.   In the Parameters section, under Operation, select Install. Choose Register Run command task to complete the task definition and return to the details page.  6.5 Review Maintenance Window Execution  After allowing enough time for your maintenance window to complete:  Navigte to the AWS Systems Manager console. Choose Maintenance Windows, and then select the Window ID for your new maintenance window.   On the Maintenance window ID details page, choose History. Select a Windows execution ID and choose View details. On the Command ID details page, scroll down to the Targets and outputs section, select an Instance ID, and choose View output. Choose Step 1 - Output and review the output. Choose Step 2 - Output and review the output.  You have now configured a maintenance window, assigned targets, assigned tasks, and validated successful execution. The same procedures can be used to schedule the execution of any AWS Systems Manager Document.\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/100_aws_resource_optimization/6_tear_down/",
	"title": "실습 종료",
	"tags": [],
	"description": "",
	"content": "별도의 진행사항이 없습니다.\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/100_aws_resource_optimization/",
	"title": "EC2 적정크기 찾기",
	"tags": [],
	"description": "",
	"content": "Authors  Arthur Basbaum, AWS Cloud Economics +Seyong Kang  소개 이 실습에서는 Amazon CloudWatch 및 AWS 리소스 최적화에 대한 개요와 EC2 적정 크기를 위해 우선적으로 해야하는 방법에 대해 설명합니다.\n목표  Amazon CloudWatch에서 CPU, 네트워크 및 디스크 사용량과 같은 지표를 확인하는 방법 알아보기 AWS 리소스 최적화를 활성화 및 사용하고 EC2 적격 규모 권장 사항 받기 AWS Resource Optimization 보고서를 필터링하는 방법을 배우고 간단하고 고 비용을 줄일 수 있는 사례에 집중하는 방법.  준비 사항  마스터 계정의 루트 사용자 AWS Resource Optimizatio의 **AWS Cost Explorer \u0026gt; Recommendations*를 활성화 하세요. 추가적인 비용은 없습니다.  요구 권한  참고 : 콘솔에는 추가 권한이 필요할 수 있으므로 실습 중에 권한 오류 메시지가 나타날 수 있습니다. 이러한 오류는 실습에 영향을 미치지 않으며 필요한 최소 권한 집합을 구현하여 보안 모범 사례를 따릅니다.  Steps:  Amazon Cloudwatch에 대하여 알아보기   Amazon EC2 리소스 최적화 Recommendations 사용   AMAZON EC2 리소스 최적화 CSV 파일을 다운로드하고 검색하기   recommendations 조치   Amazon EC2 올바른 크기를 위한 모범사례   실습 종료   "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/100_1_aws_account_setup/7_cost_explorer/",
	"title": "AWS Cost Explorer 활성화",
	"tags": [],
	"description": "",
	"content": "AWS Cost Explorer는 시간에 따른 AWS 비용 및 사용량을 시각화, 분석 및 관리 할 수 있습니다. 이것은 계쩡에서 활성화 해야 사용 할 수 있습니다. 일단 활성화되면 모든 계정에 대해 활성화되고 IAM 정책을 통해 제어됩니다. 비용 탐색기의 기본 구성은 무료이지만 시간 단위로 사용하도록 설정하면 추가 비용이 발생합니다.- AWS Cost Management Pricing.\n  권한을 가진 IAM 사용자를 콘솔에 로그인하고 Billing 으로 갑니다:   왼쪽 메뉴에서 Cost Explorer를 선택합니다:   Enable Cost Explorer를 클릭합니다:   You will receive notification that Cost Explorer has been enabled, and data will be populated:\n  이제 Cost Explorer가 활성화됬다는 공지를 받을 것입니다. 그리고 데이터가 나타납니다.   24시간 뒤 Cost Explorer롤 갑니다:   오른쪽 상단의 Settings를 클릭합니다:   Hourly and Resource Level Data를 선택하고, Save를 클릭합니다:   실행하는 리소스 수에 따라 비용이 발생합니다.\n "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/operational-excellence/100_inventory_patch_management/7_create_sns_topic/",
	"title": "Creating a Simple Notification Service Topic",
	"tags": [],
	"description": "",
	"content": "Amazon Simple Notification Service (Amazon SNS) coordinates and manages the delivery or sending of messages to subscribing endpoints or clients. In Amazon SNS, there are two types of clients: publishers and subscribers. These are also referred to as producers and consumers. Publishers communicate asynchronously with subscribers by producing and sending a message to a topic, which is a logical access point and communication channel. Subscribers (i.e., web servers, email addresses, Amazon SQS queues, AWS Lambda functions) consume or receive the message or notification over one of the supported protocols (i.e., Amazon SQS, HTTP/S, email, SMS, Lambda) when they are subscribed to the topic.\n6.1 Create and Subscribe to an SNS Topic To create and subscribe to an SNS topic:\n Navigate to the SNS console at https://console.aws.amazon.com/sns/. Choose Create topic. In the Create new topic window:  In the Topic name field, enter AdminAlert. In the Display name field, enter AdminAlert. Choose Create topic.   On the Topic details: AdminAlert page, choose Create subscription. In the Create subscription window:  Select Email from the Protocol list. Enter your email address in the Endpoint field. Choose Create subscription.   You will receive an email request for confirmation. Your Subscription ID will remain PendingConfirmation until you confirm your subscription by clicking through the link to Confirm subscription in the email. Refresh the page after confirming your subscription to view the populated Subscription ARN.  You can now use this SNS topic to send notifications to your Administrator user.\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/200_aws_resource_optimization/7_tear_down/",
	"title": "실습 종료",
	"tags": [],
	"description": "",
	"content": " IAM role CloudWatchAgentServerRole을 삭제합니다.  "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/200_aws_resource_optimization/",
	"title": "EC2 적정크기 찾기 (MEM)",
	"tags": [],
	"description": "",
	"content": "Authors  Jeff Kassel, AWS Technical Account Manager Arthur Basbaum, AWS Cloud Economics +Seyong Kang  소개 이 실습에서는 CloudWatch 에이전트를 설치하여 메모리 사용률 (GB 소모량)을 수집하고 AWS Resource Optimization를 사용하여 EC2 올바른 크기 조정연습에 새로운 데이터 포인트가 어떻게 도움이 되는지 분석하는 단계를 안내합니다.\nGoals  Amazon CloudWatch에서 CPU, 네트워크 및 디스크 사용량과 같은 지표를 확인하는 방법 알아보기 Amazon CloudWatch에서 사용자 지정지표를 통해 메모리데이터를 설치 및 수집하는 방법에 대해 알아봅니다. AWS 리소스 최적화를 활성화하고 새로운 데이터 포인트(메모리)가 권장 사항에 미치는 영향을 관찰합니다.  준비사항  마스터 계정의 루트 사용자 AWS Resource Optimization의 at AWS Cost Explorer \u0026gt; Recommendations 을 활성화합니다.  권한 요구사항  마스터 계정의 루트 사용자 액세스  Steps:  AMAZON CLOUDWATCH AGENT가 사용할 IAM 역할 만들기   EC2인스턴스에 CloudWatch IAM role 연결하기   Cloudwatch Agent 수동 설치   업데이트 된 Amazon EC2 리소스 최적화 권장 사항   AMAZON EC2 올바를 크기를 위한 모범사례   실습 종료   a\n모범 사례 점검표  Amazon CloudWatch를 시작하고 EC2 인스턴스의 평균 CPU, 디스크 및 네트워크 사용량을 관찰하십시오 EC2 인스턴스에 CloudWatch 에이전트를 수동으로 설치하여 메모리 사용률을 추적합니다. 추가 데이터 포인트가있을 때 AWS 리소스 최적화에 미치는 영향을 관찰하십시오 (메모리 사용률)  "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/100_1_aws_account_setup/8_cost_tags/",
	"title": "AWS 생성 비용할당태그 활성화",
	"tags": [],
	"description": "",
	"content": "AWS 생성 비용할당태그를 활성화하면 리소스 생성자 정보가 포함 된 비용 할당 태그가 생성됩니다. 이것은 생성 된 리소스에 자동으로 적용되며 리소스를 만든 사람에 따라 비용을 확인하고 할당 할 수 있습니다.\n  Master account 계정의 IAM사용자로 로그인한 후, Billing 콘솔로 갑니다:   왼쪽 메뉴의 Cost Allocation Tags를 클릭합니다:   Activate를 클릭하여 태그를 활성화 합니다:   이제 동작하는 것을 확인할 수 있습니다:   "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/operational-excellence/100_inventory_patch_management/8_cleanup/",
	"title": "Removing Lab Resources",
	"tags": [],
	"description": "",
	"content": " NoteWhen the lab is complete, remove the resources you created. Otherwise you will be charged for any resources that are not covered in the AWS Free Tier.\n 7.1 Remove resources created with CloudFormation  Navigate to the CloudFormation dashboard at https://console.aws.amazon.com/cloudformation/:  Select your first stack. Choose Actions and choose delete stack. Select your second stack. Choose Actions and choose delete stack .   Navigate to Systems Manager console at https://console.aws.amazon.com/systems-manager/:  Choose State Manager. Select the association you created. Choose Delete.   If you created an S3 bucket to store detailed output, delete the bucket and associated data:  Navigate to the S3 console https://s3.console.aws.amazon.com/s3/. Select the bucket. Choose Delete and provide the bucket name to confirm deletion.   If you created the optional SNS Topic, delete the SNS topic:  Navigate to the SNS console https://console.aws.amazon.com/sns/. Select your AdminAlert SNS topic from the list. Choose Actions and select Delete topics.   If you created a Maintenance Window, delete the Maintenance Window:  Navigate to the Systems Manager console at https://console.aws.amazon.com/systems-manager/. Choose Maintenance Windows. Select the maintenance window you created. Choose Delete. In the Delete maintenance window window, choose Delete.   If you do not intend to continue to use the Administrator account you created, delete the account:  Navigate to the IAM console at https://console.aws.amazon.com/iam/. Choose Users. Select your user from the list. Choose Delete user. Select the check box next to \u0026ldquo;One or more of these users have recently accessed AWS. Deleting them could affect running systems. Check the box to confirm that you want to delete these users.\u0026rdquo;. Choose Yes, delete. When next you navigate within the console you will be returned to the account login page.   If you do intend to continue to use the Administrator account you created, we strongly suggest you enable MFA.  Thank you for using this lab.\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/100_1_aws_account_setup/9_tear_down/",
	"title": "Tear down",
	"tags": [],
	"description": "",
	"content": "이제 모든 AWS 계정이 비용 최적화를 활성화하는 데 필요한 기본 단계를 다루었습니다. 이 실습에 대한 리소스를 제거하겠습니다.\nQuickSight구독 취소 아래 단계를 따라 QuickSight의 구독을 취소하세요.\n  Click on your profile icon in the top right, select Manage QuickSight:   Click on Account settings:   Cluck on Unsubscribe:   Review the notifications, click Unsubscribe:   "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/introduction/",
	"title": "소개",
	"tags": [],
	"description": "",
	"content": " 만약 Well Architected Framework에 대한 개념과 내용을 알고 있다면, 2단계(실습 환경 소개)로 넘어가세요.\n 당신은 다음 질문에 대답할 수 있나요? : “당신의 시스템은 잘 설계되어 있습니까??” AWS의 전문가들은 매일 고객과 함께 클라우드의 모범 사례를 활용하여 시스템을 설계합니다. 설계의 진화에 발맞춰 고객의 아키텍처에 더할 것과 뺄 것을 결정할 수 있도록 도와 드립니다. 그리고 고객이 이러한 시스템을 실제 환경에 배포하는 과정에서 해당 시스템의 성능 수준과 그러한 결정의 결과를 배우게 됩니다. AWS는 이렇게 얻은 교훈을 토대로 아키텍처가 AWS 모범 사례에 얼마나 잘 맞는지 평가할 수 있는 여러 가지 질문을 모은 AWS Well-Architected 프레임워크를 만들어 냈습니다.\n이 프레임워크는 현대의 클라우드 기반 시스템에 기대되는 품질과, 시스템을 평가하는 일관된 접근 방식을 제공합니다.\n AWS Well-Architected Framework는 무엇입니까?  "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/introduction/framework/",
	"title": "AWS-Well-Architected Framework란?",
	"tags": [],
	"description": "",
	"content": "AWS Well-Architected Framework는 다음과 같은 장점이 있습니다.  빌드와 배포속도의 향상 위험의 감소 또는 완화 정보에 근거한 결정 AWS 모범사례 제공   이 프레임워크는 매커니즘입니다. 매카니즘은 완벽하게 돌아가는 프로세스를 의미합니다. Well-Architected-Framework는 단순히 아키텍쳐를 개선하겠다는 의도를 가지고 질문을 하고 노력 하는 것 뿐만아니라, 규칙이나 프로세스의 준수여부를 확인하는 완벽한 메카니즘으로 대체하는 것을 의미합니다.\n클라우드의 서비스와 기능과 모범사례등을 학습하고, 아키택쳐가 가지고 있는 데이타를 측정한 뒤, 그것들을 적용하여 아키텍쳐를 향상시키는 완전하게 반복적으로 수행하는 과정을 거칩니다. 이 모든것은 프로세스화 되어 애플리케이션 전체 수명주기에 반복적으로 수행됩니다.\n AWS Well-Architected Framework의 구성요소 AWS Well-Architected Framework는 다음과 같이 구성되어 있습니다.\n  5가지 기반을 토대로합니다.\n 건물을 지을때 가장 중요한 것은 기초공사 입니다. 기초공사가 잘되어있으면 건물을 올릴 때 문제가 생기더라도 쉽게 무너지지않습니다. 기술솔루션을 설계할 때 운영우수성, 보안, 안정성, 성능효율성, 비용최적화 이렇게 다섯가지 토대를 간과하면 기대 및 요구에 충실한 시스템을 제작하기가 어려울 수 있습니다. 이러한 기반을 아키텍처에 녹여 내면 안정적이고 효율적인 시스템을 구축하는 데 도움이 되며, 또한 이를 바탕으로 기능적 요구 사항 등 설계의 다른 측면에 집중할 수 있게 됩니다.    설계 원칙\n  Well-Architected 프레임워크는 다음과 같은 여러 가지 일반 설계 원칙을 확립하여 우수한 클라우드 설계를 촉진합니다.\n 필요한 용량을 추측하지 말것 프로덕션 규모의 시스템을 테스트 할 것 아키텍쳐 실험을 쉽게 테스트 하기위해 자동화 할 것 아키텍쳐의 발전을 허용할 것 데이터를 사용하여 아키텍쳐를 구동할 것 게임데이를 통해 아키텍쳐를 향상시킬 것    기반별 설계 원칙은 기반과 관련된 실습을 진행하면서 각각 알아보도록하겠습니다.\n    질문\n AWS Well-Architected 프레임워크에는 특정 아키텍처와 클라우드 모범 사례가 얼마나 일치하는지 살펴볼 수 있는 몇 가지 기본 질문이 포함되어 있습니다. 이 프레임워크는 현대의 클라우드 기반 시스템에 기대되는 품질과 비교하여 시스템을 평가하는 일관된 접근 방식을 제공합니다. 아키텍처의 상태를 토대로, 프레임워크가 보다 효과적으로 이 품질에 도달할 수 있는 개선 사항을 제안합니다.     그럼 이제 AWS Well Architected의 5가지 기반에 대하여 알아봅시다   "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/introduction/pillar/",
	"title": "AWS Well-Architected의 기반",
	"tags": [],
	"description": "",
	"content": "AWS Well-Architected Framework는 운영우수성, 보안, 안정성, 성능효율성, 비용최적화 다섯가지 필라를 토대로 합니다.\n   기반이름 설명     운영우수성 비즈니스 가치를 제공하고 지원 프로세스 및 절차를 지속적으로 개선하기 위해 시스템을 실행 및 모니터링하는 기능   보안 위험 평가 및 완화 전략을 통해 정보, 시스템 및 자산을 보호하는 동시에 비즈니스 가치를 제공하는 능력입니다.   안정성 인프라 또는 서비스 장애를 복구하고, 수요에 따라 컴퓨팅 리소스를 탄력적으로 확보하고, 구성 오류나 일시적 네트워크 문제 같은 중단 사태를 완화할 수 있는 시스템의 능력입니다   성능효율성 컴퓨팅 리소스를 시스템 요구 사항에 맞게 효율적으로 사용하고, 수요 변화 및 기술 진화에 발맞춰 그러한 효율성을 유지하는 능력입니다.   비용최적화 불필요한 비용 또는 최선이 아닌 리소스 사용을 피하거나 제거하는 능력입니다.    이러한 비즈니스 의사결정에 따라 엔지니어링 우선 순위가 달라질 수 있습니다. 예를 들어 개발 환경에서는 안정성을 상쇄하여 비용을 줄이는 데 최적화할 수 있습니다. 미션 크리티컬 솔루션에서는 안정성을 최적화하는 대신 비용 증가를 기꺼이 감수할 수도 있습니다. 전자 상거래 솔루션이라면 고객 만족이 수익 증대로 이어질 수 있기 때문에 성능 우선순위를 높이기도 합니다. 보안 및 운영 우수성은 일반적으로 다른 기반과 절충 관계에 있지 않습니다.\n 그럼 각 기반별 실습을 진행해보도록하겠습니다.   "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/",
	"title": "홈",
	"tags": [],
	"description": "",
	"content": "Well Architected Labs  Introduction AWS(Amazon Web Services)는 고객이 클라우드에서 안정적이고 안전하면서도 효율적이고 경제적인 시스템을 설계할 수 있도록 하려면 아키텍처 모범 사례를 고객과 공유해야 한다는 점을 잘 알고 있습니다. 이러한 노력의 일환으로 개발된 AWS Well-Architected 프레임워크를 이용하면 AWS에서 시스템을 구축하면서 내리게 되는 결정의 장점과 단점을 이해할 수 있습니다. Well-Architected 시스템을 마련하면 사업의 성공 가능성이 대폭 높아질 것입니다.\n이 프레임 워크는 고객과 파트너가 아키텍쳐를 평가할 수 있는 일관적인 접근방식을 제공하며, 시간이 지남에 따라 어플리케이션의 요구에 따라 확장 할 수 있는 설계 구현을 돕는 가이드라인을 제공합니다.\n이 레포지토리는 아키텍처 모범사례를 사용학여 학습,측정, 구축하는데 도움이 되는 Hand-on-Lab 형태의 문서와 코드가 포함되어 있습니다. 실습은 입문을 위한 100레벨, 200/300레벨과 고급레벨의 400으로 분류됩니다.\nLicense Licensed under the Apache 2.0 and MITnoAttr License.\nCopyright 2018-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\nLicensed under the Apache License, Version 2.0 (the \u0026ldquo;License\u0026rdquo;). You may not use this file except in compliance with the License. A copy of the License is located at\nhttps://aws.amazon.com/apache2.0/\nor in the \u0026ldquo;license\u0026rdquo; file accompanying this file. This file is distributed on an \u0026ldquo;AS IS\u0026rdquo; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/setup/",
	"title": "실습 환경 셋업",
	"tags": [],
	"description": "",
	"content": " 다음 장에서 생성한 CloudFormation의 스택은 이 실습환경을 전부 포함하고 있습니다.\n 실습환경 사용 서비스    이름 설명     Amazon EC2 Amazon Elastic Compute Cloud(EC2)는 안전하고 크기 조정이 가능한 컴퓨팅 파워를 클라우드에서 제공하는 웹 서비스입니다. 개발자가 더 쉽게 웹 규모의 클라우드 컴퓨팅 작업을 할 수 있도록 설계되었습니다. Amazon EC2의 간단한 웹 서비스 인터페이스를 통해 간편하게 필요한 용량을 얻고 구성할 수 있습니다. 컴퓨팅 리소스에 대한 포괄적인 제어권을 제공하며, Amazon의 검증된 컴퓨팅 환경에서 실행할 수 있습니다.   Application Load Balancer 로드 밸런서는 클라이언트에 대한 단일 접점 역할을 수행합니다. 로드 밸런서는 여러 가용 영역에서 EC2 인스턴스 같은 여러 대상에 수신 애플리케이션 트래픽을 분산합니다. 이렇게 하면 애플리케이션의 가용성이 향상됩니다. 로드 밸런서에 하나 이상의 리스너를 추가할 수 있습니다.   Amazon RDS Amazon Relational Database Service(RDS)를 사용하면 클라우드에서 관계형 데이터베이스를 간편하게 설정, 운영 및 확장할 수 있습니다. 하드웨어 프로비저닝, 데이터베이스 설정, 패치 및 백업과 같은 시간 소모적인 관리 작업을 자동화하면서 비용 효율적이고 크기 조정 가능한 용량을 제공합니다. 사용자가 애플리케이션에 집중하여 애플리케이션에 필요한 빠른 성능, 고가용성, 보안 및 호환성을 제공할 수 있도록 지원합니다.   AWS Auto Scaling AWS Auto Scaling은 애플리케이션을 모니터링하고 용량을 자동으로 조정하여, 최대한 저렴한 비용으로 안정적이고 예측 가능한 성능을 유지합니다. AWS Auto Scaling을 사용하면 몇 분 만에 손쉽게 여러 서비스 전체에서 여러 리소스에 대해 애플리케이션 규모 조정을 설정할 수 있습니다.    -CloudFomration을 이용하여 실습환경을 셋팅해보겠습니다.\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/setup/lab-setup-master/",
	"title": "MASTER 계정 셋업",
	"tags": [],
	"description": "",
	"content": "AWS 계정  중요: EventEngine을 사용한다면 바로 하단의 Cloudformation template부터 진행하세요.\n 이미 AWS 계정을 가지고 있다면 즉시 이 실습의 가이드를 따라 진행할 수 있으나, 계정이 없다면 먼저 AWS 계정을 만들어야 합니다.\n AWS 계정 생성 및 활성화 가이드는 다음 링크를 참조하시기 바랍니다.\n실습은 us-west-2 (오레곤) 리전을 선택합니다.\n IAM 사용자 AWS 계정을 생성했지만 직접 IAM 사용자를 생성하지 않은 경우, IAM 콘솔을 사용하여 IAM 사용자를 생성 할 수 있습니다. 다음 스텝에 따라 Administrator (관리자) 사용자를 생성합니다. 이미 관리자 사용자가 있다면, 다음 IAM 사용자 생성 작업을 건너 뜁니다.\n AWS 계정 이메일 주소와 비밀번호를 사용하여 AWS 계정의 Root 사용자로 IAM 콘솔 에 로그인 합니다. IAM 콘솔 왼쪽 메뉴 패널에서 Users (사용자)를 선택한 다음 Add user (사용자 추가)를 클릭합니다. User name (사용자 이름)은 Administrator로 입력합니다. AWS Management Console access 체크박스를 선택하고, Custom password를 선택한 다음 비빌번호를 입력합니다. Next: Permissions (다음: 권한)을 클릭합니다.  Attach existing policies directly (기존 정책 직접 연결)를 선택하고 AdministratorAccess 정책에 체크박스를 선택하고 Next: Tags (다음: 태그)를 클릭합니다.  Next: Review (다음: 검토)를 클릭합니다. Administrator 사용자에 AdministratorAccess 관리형 정책이 추가 된 것을 확인하고 Create user (사용자 만들기)를 클릭합니다. 이제 Root 사용자를 로그아웃하고 새로 생성한 Administrator 사용자로 로그인을 합니다. 다음 URL을 사용하여 로그인 할 수 있습니다.   https://\u0026lt;your_aws_account_id\u0026gt;.signin.aws.amazon.com/console/\n\u0026lt;your_aws_account_id\u0026gt;는 본인 AWS 계정의 고유 ID를 입력합니다. Root 사용자로는 해당 실습을 진행할 때 에러가 발생할 수 있습니다. 반드시 admin 유저 계정으로 로그인하여 진행하세요.\n  EC2 Key Pair CloudFormaton template을 사용하여 실습에 필요한 기본 환경을 구성하려면 Amazon EC2 키 페어를 제공해야 합니다. 이미 EC2 키 페어가 있는 경우 다음 작업을 건너 뜁니다.\n Administrator 사용자로 AWS 콘솔에 로그인 한 다음 EC2 콘솔로 이동합니다. 탐색 창의 Network \u0026amp; Security (네트워크 \u0026amp; 보안)에서 Key Pairs (키 페어)를 선택합니다. Create Key Pair (키 페어 생성)를 클릭합니다. Key pair name (키 페어 이름)에 새 key pair의 이름을 입력 한 다음 Create (생성)을 클릭합니다. .PEM 파일 형식의 Private Key (개인 키) 파일은 브라우저에서 자동으로 다운로드 됩니다. 개인 키는 다음 CloudFormation을 사용할 때 필요합니다.  CloudFormation Template  이 계정은 Master가 되는 계정을 위한 설정입니다.\n AWS CloudFormation에서는 클라우드 환경에서 AWS 및 타사 애플리케이션 리소스를 모델링하고 프로비저닝할 수 있도록 공용 언어를 제공합니다. AWS CloudFormation을 사용하면 프로그래밍 언어 또는 간단한 텍스트 파일을 사용하여 자동화되고 안전한 방식으로 모든 지역과 계정에 걸쳐 애플리케이션에 필요한 모든 리소스를 모델링 및 프로비저닝할 수 있습니다.\nAWS CodeQuality 실습에 필요한 AWS 리소스를 사전에 생성하기 위해 제공된CloudFormation template을 사용하여 CloudFormation stack을 생성합니다.\nCloudFormation 스택을 시작하려면, Launch Stack 버튼를 클릭해서 CloudFormation 콘솔로 이동합니다.\n중요: 이 탬플릿은 us-west-2 (오레곤)을 위해 만들어졌습니다.\n  Launch Stack  반드시 pem 키를 다운받아야합니다. EventEngine의 default key를 사용하지 마십시오.\n 스택 생성 단계에서 스택 이름을 입력하고 앞서 생성한 EC2 키 페어를 선택합니다. 그리고 나머지는 기본 값을 유지하고 마지막 단계에서 CloudFormation이 IAM 리소스를 생성할 때 커스텀 이름을 사용할 수 있게\nStackname에 MasterAccountStack을 입력합니다. Workload Name에 prod를 입력합니다.\nAcknowledge 체크박스를 선택하고 Create stack (스택 생성)을 클릭합니다.\n스택 생성이 완료되면 AWS 계정에 실습을 실행하는 데 필요한 모든 기본 리소스가 준비 되어있습니다. Outputs 탭에서 ALBAddress, DBDNS가 표시됩니다.\n -이제 워크샵을 진행해보도록 하겠습니다.\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/performanceefficiency/",
	"title": "성능효율성",
	"tags": [],
	"description": "",
	"content": "이 리포지토리에는 아키텍처 모범 사례를 사용하여 학습, 측정 및 구축하는 데 도움이되는 실습 랩 형식의 설명서 및 코드가 포함되어 있습니다. 실습은 100 개 입문, 200/300 개 중간, 400 개 고급 레벨로 분류됩니다.\n성능 효율성에 대한 자세한 내용은 AWS Well-Architected 성능효율성 백서 또는 온라인 https://wa.aws.amazon.com/을 참조하십시오.\n이 실습은 워크로드 계정을 사용하여 진행합니다.\n CloudWatch 대시보드를 사용하여 모니터링 하기\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/performanceefficiency/cloudwatchdashboards/",
	"title": "CloudWatch 대시보드를 사용하여 모니터링 하기",
	"tags": [],
	"description": "",
	"content": "소개 이 실습에서는 모든 AWS 리소스의 상태 및 성능을 종합적으로 파악할 수 있도록 Amazon CloudWatch 대시보드를 구성하는 과정을 안내합니다. 이를 통해 모니터링을 시작하고, 계정 및 리소스 기반 메트릭 및 경보 보기, 성능 관련 문제의 근본 원인을 쉽게 파악할 수 있습니다. AWS Well-Architected Framework의 성능효율성 Pillar를 읽고 더 많은 모범 사례를 찾을 수 있습니다. 이 실습에서 배우는 내용은 AWS Well-Architected Framework에 따라 워크로드를 보호하는 데 도움이됩니다.\n목표 리소스가 예상대로 작동하는지 모니터링하기\n실습을 시작해봅시다.\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/performanceefficiency/cloudwatcheventemail/",
	"title": "CPU 경보",
	"tags": [],
	"description": "",
	"content": "소개 이 실습에서는 AWS Management 콘솔을 사용해 CPU 사용량 경보를 생성합니다. 경보 상태가 OK에서 ALARM으로 변경될 때 Amazon SNS를 사용하여 이메일 메시지를 전송하는 CloudWatch 경보를 생성할 수 있습니다. EC2 인스턴스의 평균 CPU 사용률이 지정된 기간 동안 연속해서 지정된 임계값을 초과하면 경보 상태가 ALARM으로 바뀝니다.\n목표 CPU사용율 95% 이상시 사용자에게 e-mail 발송\n실습을 시작해봅시다.\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/cost/",
	"title": "비용최적화",
	"tags": [],
	"description": "",
	"content": "소개  비용 최적화는 전체 수명주기 동안 시스템을 지속적으로 개선하는 프로세스입니다. 이 실습을 사용하면 비용 최적화 모범 사례를 구현하고 워크로드가 제대로 아키텍처를 유지하는 방법에 대한 실질적인 경험을 얻을 수 있습니다.\n클라우드의 비용 최적화 모범 사례에 대한 자세한 내용은 AWS 콘솔의 Well-Architected 도구를 방문하여 AWS Well-Architected 비용 최적화 백서를 읽으십시오.\n시작하기-비용 최적화 기초  비용 최적화 과정의 첫 번째 단계는 계정을 올바르게 설정하고 비용 최적화에 사용할 수있는 도구와 데이터를 이해하는 것입니다. 이들은 비 기술적 역할을 포함하여 클라우드를 사용하는 모든 사람이 액세스 할 수있는 랩 모음입니다.\n기본 사항에는 계정 설정, AWS 결제 콘솔, AWS 예산, AWS 비용 탐색기, 예약 인스턴스 (RI), 비용 및 사용 보고서 (CUR), 비용 및 사용 현황 분석, 비용 및 사용 현황 시각화가 포함됩니다.\n실습을 시작해봅시다.\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/operational-excellence/",
	"title": "운영우수성",
	"tags": [],
	"description": "",
	"content": "소개 AWS의 운영우수성에 대한 자세한 내용은 AWS 콘솔의 Well-Architected 도구를 방문하여 AWS Well-Architected Operational Excellence백서를 참조하십시오.\nLabs  100 - 인벤토리와 패치 관리    소개   운영의 코드화를 사용한 Inventory Management   Patch Management   Creating Maintenance Windows and Scheduling Automated Operations Activities   Creating a Simple Notification Service Topic   Removing Lab Resources    "
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/performanceefficiency/cloudwatchdashboards/default-dashboard/",
	"title": "자동 대시보드 설정",
	"tags": [],
	"description": "",
	"content": "CloudWatch 자동 대시보드를 살펴볼 것입니다:  Amazon CloudWatch는 DevOps 엔지니어, 개발자, SRE(사이트 안정성 엔지니어) 및 IT 관리자를 위해 구축된 모니터링 및 관찰 기능 서비스입니다. CloudWatch는 애플리케이션을 모니터링하고, 시스템 전반의 성능 변경 사항에 대응하며, 리소스 사용률을 최적화하고, 운영 상태에 대한 통합된 보기를 확보하는 데 필요한 데이터와 실행 가능한 통찰력을 제공합니다. CloudWatch는 로그, 지표 및 이벤트 형태로 모니터링 및 운영 데이터를 수집하여 AWS와 온프레미스 서버에서 실행되는 AWS 리소스, 애플리케이션 및 서비스에 대한 통합된 보기를 제공합니다. CloudWatch를 사용하여 환경에서 이상 동작을 감지하며, 경보를 설정하고, 로그와 지표를 나란히 시각화하며, 자동화된 작업을 수행하고, 문제를 해결하며, 통찰력을 확보하여 애플리케이션을 원활하게 실행할 수 있습니다.\nAmazon CloudWatch 자동 대시보드를 사용하면 모든 AWS 리소스를 쉽게 모니터링 할 수 있으며 빠르게 시작할 수 있습니다. 계정 및 리소스 기반의 메트릭 및 경보보기를 탐색하고 성능 문제의 근본 원인을 쉽게 찾을 수 있습니다.\nCloudWatch 콘솔 가기 : https://console.aws.amazon.com/cloudwatch/\n  왼쪽 상단에는 계정에서 사용하는 AWS 서비스 목록과 해당 서비스의 경보 상태가 표시됩니다. 오른쪽 상단에는 사용하는 AWS 서비스 수에 따라 계정에 2 개 또는 4 개의 경보가 표시됩니다. 표시된 경보는 ALARM 상태이거나 가장 최근에 변경된 상태입니다. 이러한 경보를 통해 모든 서비스의 경보 상태와 가장 최근에 변경된 경보를 확인하여 AWS 서비스의 상태를 평가할 수 있습니다. 이를 통해 문제를 모니터링하고 신속하게 진단 할 수 있습니다.\n  왼쪽 메뉴 대시보드 하위에는 사용자가 생성한 사용자 대시보드가 있습니다. 이는 사용자 지정 서비스 또는 애플리케이션에 대한 지표를 페이지에 추가하거나 가장 모니터링하려는 AWS 서비스에서 추가 주요 지표를 전달할 수있는 편리한 방법입니다. 자세한 설정방법은 다음 챕터에서 알아볼 것입니다.\n  6 개 이상의 AWS 서비스를 사용하는 경우 기본 대시보드 아래에는 자동 교차 서비스 대시보드(Cross service dashboard)에 대한 링크가 있습니다. 교차 서비스 대시보드에는 사용자 지정 대시보드를 모니터링하거나 생성 할 지표를 선택할 필요없이 사용하는 모든 AWS 서비스의 주요 지표가 자동으로 표시됩니다. 이를 사용하여 해당 서비스에 대한 더 많은 주요 지표를 볼 수 있습니다. 6개 미만의 AWS 서비스를 사용하는 경우 교차 서비스 대시보드가 이 페이지에 자동으로 표시됩니다.\n  이제 사용자가 원하는 데이터만 볼 수 있도록 커스텀 대시보드를 만드는 방법을 알아보겠습니다.\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/performanceefficiency/cloudwatchdashboards/setup/",
	"title": "사용자 대시보드 설정",
	"tags": [],
	"description": "",
	"content": "CloudWatch 사용자 대시보드 만들기  CloudFormation에서 생성한 WellArchitectedFrameworkLabsStack에서 생성된 인스턴스의 CPU사용량과 갯수를 측정 할 것입니다.\n  먼저 WellArchitectedFrameworkLabsStack의 Auto scaling group이 생성한 인스턴스의 CPU Utilization을 가져오기 위해 Auto scaling group의 이름이 필요하며 Load Balancer에 연결된 EC2의 갯수를 확인하기 위해선 Application Load Balancer의 이름이 필요합니다.\nCloudFormation 콘솔로 가기 : https://us-west-2.console.aws.amazon.com/cloudformation/home?region=us-west-2\n  Output의 ASGName은 Auto scaling group의 이름입니다. ALBName는 Application Load Balancer의 이름입니다. CloudFormation 콘솔에서 MasterAccountStack을 선택합니다. 상단 탭의 Output을 선택한 후 ASGName과 ALBName의 값을 복사한 후 어딘가 적어놓습니다.\n이제 CloudWatch에서 대시보드를 생성할 것입니다. CloudWatch 콜솔로 가기 : https://us-west-2.console.aws.amazon.com/cloudwatch/home?region=us-west-2\n  오른쪽 상단의 Dashboards를 선택합니다.   Create Dashboard 버튼을 클릭합니다.   Create new dashboard창의 dashboard name에 warworkshop-default를 입력하고 Create dashboard버튼을 클릭하여 기본 대쉬보드를 생성합니다.   이제 생성한 대시보드에서 EC2의 CPU사용울을 볼 수 있는 위젯을 추가할 것입니다. 시간의 흐름에 따른 CPU 사용율를 알아보기 쉽도록 라인형 그래프를 선택하고 Configure를 클릭합니다.   All metrics의 검색창에 이전에 복사해 놓은 Output의 ASGName의 값을 붙여넣습니다. 그리고 엔터를 누른 후 EC2 \u0026gt; By Auto Scaling Group를 선택합니다.   측정가능한 여러 Metric값이 나옵니다. 추후 필요한 값이 있다면 선택하셔서 확인하실 수 있습니다. 지금은 중 Metric Name이 CPUUtilization를 것을 선택합니다. 그리고 Create Widget버튼을 선택합니다.   대시보드 창에 CPUUtilization이 추가된것을 볼 수 있습니다. 이제 EC2의 instance 갯수를 확인하기위한 위젯을 추가해보도록 하겠습니다. 상단의 Add widget버튼을 클릭합니다.   EC2 instance의 갯수를 죽각적으로 알아보기 쉽도록 Number 타입를 사용하도록 하겠습니다. Number 타입을 선택한 후 Configure 버튼을 클릭합니다.   All metrics의 검색창에 이전에 복사해 놓은 Output의 ALBName 값을 붙여넣습니다. 그리고 엔터를 누른 후 Application Load Balancer 별, Target Group단위의 값을 측정하기 위해 ApplicationELB \u0026gt; Per AppELB, per TG Metrics를 선택합니다.   다양한 메트릭들이 나옵니다. 이 중 HealthyHostCount 값을 선택한 후 하단의 Create widget을 선택합니다.   이제 CPUUtilization과 Target Group에 생성된 Instance의 갯수를 확인할 수 있는 대시보드 생성이 완료 되었습니다. 현재는 매우 낮은 CPU사용율과 2개의 인스턴스가 띄워져 있는 것을 확인할 수 있습니다. 상단의 Save dashboard를 눌러 대시보드를 저장합니다.   이제 CPU사용율의 변화를 사용자가 즉시 알 수 있도록 Cloudwatch 경보를 생성하겠습니다.\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/performanceefficiency/cloudwatcheventemail/setup/",
	"title": "사용자 경보 설정",
	"tags": [],
	"description": "",
	"content": "CloudWatch 경보, 경보 생성을  CloudFormation에서 생성한 WellArchitectedFrameworkLabsStack에서 생성된 인스턴스의 CPU사용량과 갯수를 측정 할 것입니다.\nCloudWatch 콘솔 가기 : https://console.aws.amazon.com/cloudwatch/\n  왼쪽 탐생착에서 경보와 경보 생성을 선택합니다.   그래프의 지표 선택을 선택합니다.   EC2별 CPU사용율을 선택하기위해 검색창에 이전에 복사한 ASGName를 입력한 후 검색하고 EC2 \u0026gt; By Auto Scaling group를 선택합니다.   Metric이 CPUUtilization인 항목을 찾아 체크박스를 체크한 후 Select Metric버튼을 누릅니다.   지표 및 조건 지정 설정을 진행하겠습니다. 지표는 백분율을 이용하여 CPU가 90%이상 사용될 경우 경보를 생성할 예정입니다. 그래프의 통계 항목을 p90으로 변경합니다. 실제 사용하실 경우 다양항 측정기준이 있으니 원하시는 항목을 선택하시면 됩니다. 기간은 1분을 선택합니다. 1분마다 항목을 업데이트합니다.   조건의 입계값 유형은 정적으로, 보다 큼를 선택 한 후 \u0026hellip;보다에 95를 입력합니다. CPU사용율의 백분율이 95%이상 올라갈 경우 경보이 생성됩니다.   이제 하단의 다음을 선택합니다.\n  이제 작업구성입니다. 기존에 생성되어있는 SNS topic을 연결할 수도 있습니다. 여기선 새로운 SNS topic을 생성하겠습니다. 경보 상태 트리거의 경보 상태를 선택하고 SNS 주제 선택에서 새 주제 생성라디오 박스를 선택합니다. 그리고 새 주제 생성에 Default_CloudWatch_Alarms_Topic, Email Endpoint에 본인의 Email을 입력한 후 Create topic 버튼을 클릭합니다.   다음 버튼을 클릭합니다.\n  마지막 이름 및 설명 추가에 아래와 같이 입력합니다.\n Alarm name : CloudWatch-CPU-Alarm Alarm description - optional : for WAR workshop     *경보생성 버튼을 눌러 생성을 완료합니다.\n  이제 기본적인 셋팅이 완료되었습니다.\n  이제 EC2 Instance의 CPU사용율이 올라가면 어떤 변화가 있는지 확인해 보겠습니다.\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/performanceefficiency/cloudwatcheventemail/snstopic/",
	"title": "이메일 확인 및 전화번호 등록",
	"tags": [],
	"description": "",
	"content": "SNS e-mail Confirm  SNS topic에서 연결한 email은 해당 계정에서 재승인을 해야 올바른 경고를 받을 수 있습니다. 이전 sns 셋팅할 때 입력한 email의 받은 편지함에서 ÀWS Notification이 보낸 메일을 찾으세요. 그리고 Confirm subription을 누르세요. 아래와 같은 화면이 나타나면서 구독이 완료됩니다. 이제 추가로 경보 발생시 휴대폰 문자를 보낼 수 있도록 SNS topic에 휴대폰 번호를 추가해보겠습니다.\nAmazon SNS 콘솔 가기 : https://console.aws.amazon.com/sns/\n  왼쪽 메뉴의 Topics을 선택합니다.\n  경보를 생성하면서 같이만든 SNS topic인 Default_CloudWatchAlarms_Topic을 선택합니다.   스크롤을 내리면 구독을 보면 경보를 생성할 때 등록한 email을 볼 수 있습니다. 이곳에서 구독 생성을 선택해 새로운 구독자를 추가할 수 있습니다.   구독생성의 Protocol을 SMS로 선택합니다. (이곳에서 다양한 프로토콜을 사용 할 수 있습니다.) 그리고 Endpoint에 본인의 휴대폰 번호를 입력합니다. (ex+821012345678) 그리고 하단의 구독 생성버튼을 클릭합니다.   경보에 나의 휴대폰 번호 등록도 완료하였습니다. 이전의 Topics메뉴에서 Default_CloudWatchAlarms_Topic를 선택하면 해당 토픽과 연결된 email과 휴대폰 정보를 볼 수 있습니다.\n  이제 EC2 Instance의 CPU사용율이 올라가면 어떤 변화가 있는지 확인해 보겠습니다.\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/performanceefficiency/cloudwatcheventemail/ec2/",
	"title": "EC2 Loadtest 진행",
	"tags": [],
	"description": "",
	"content": "EC2의 CPU사용량을 늘린 다음 대시보드를 확인할 것입니다:  EC2의 CPU사용량이 많아지면 Autoscaling Group은 자동으로 EC2 Instance 갯수를 증가시킵니다. 그리고 그 변화를 Cloudwatch의 대시보드에서 확인할 것입니다.\nApplication Load balancer를 통한 Web 접속   Cloudformation에서 만든 WellArchitectedFrameworkLabsStack의 Output에 Application Load balancer의 DNS주소가 있습니다.\nCloudFormation 콘솔로 가기 : https://us-west-2.console.aws.amazon.com/cloudformation/home?region=us-west-2\n  실습 Setup에서 만든 WellArchitectedFrameworkLabsStack을 선택합니다.   Output의 ALBDNS 값이 Application load balancer의 DNS주소입니다. 상단 탭의 Output을 선택한 후 ALBDNS의 값을 복사한 후 웹 브라우저 주소창에 붙여넣습니다.   다음과 같은 화면을 볼 수 있습니다. 이 웹서버의 CPU사용률은 0%입니다. 상단의 Load test 버튼을 클릭하면 화면이 전환하면서 EC2의 CPU사용율이 100%로 올라갑니다. 이 화면을 벗어날때까지 CPU사용율은 내려가지 않을 것입니다.\n  CloudWatch 콘솔로 이동하여 이전에 만든 사용자 대시보드를 확인하겠습니다.\nCloudWatch 콘솔 가기 : https://console.aws.amazon.com/cloudwatch/\n  오른쪽 상단의 Dashboards를 선택합니다.   이전에 생성한 warworkshop-default를 선택합니다.   기본 대시보드의 모니터링 주기는 5분입니다.(이것은 설정에서 변경할 수 있습니다.) 5분 후 새로고침을 하면 100%를 향해 급격하게 변경된 CPUUtilization 래프를 보실 수 있습니다. 그리고 좀 더 시간이 지나면 Autoscaling group으로 4개까지 인스턴스가 확장되어있는 모습을 볼 수 있습니다.   메일도 확인해봅니다. 이전에 등록한 email로 경보가 온것을 확인할 수 있습니다. 휴대폰 번호를 등록했다면 문자도 받으실 수 있습니다.\n  EC2 Dashboard로 가면 자동으로 확장되어있는 EC2도 확인하실 수 있습니다.   loadtest창을 벗어나면 잠시후 2개로 줄어있는 인스턴스와 안정화되어있는 그래프를 확인하실 수 있습니다.\n  Cloudwatch를 활용하여 최적의 성능을 모니터링하세요. 시스템 성능은 시간이 지남에 따라 저하될 수 있습니다. 시스템 성능을 모니터링하여 성능 저하 상태를 식별하고 운영체제 또는 애플리케이션 부하와 같은 내부 또는 외부 요인을 해소하세요. 시스템성능의 변화를 확인할 수 있는 경보를 생성하세요.\n 모범 사례: 성능 관련 지표 기록 Amazon CloudWatch, 타사 서비스 또는 자체 관리형 모니터링 도구를 사용하여 성능 관련 지표를 기록합니다. 예를 들어 데이터베이스 트랜잭션, 속도가 느린 쿼리, I/O 지연 시간, HTTP 요청 처리량, 서비스 지연 시간 또는 기타 주요 데이터를 기록할 수 있습니다.\n이벤트 또는 인시던트 발생 시의 지표 분석 이벤트나 인시던트에 대응하는 과정에서 모니터링 대시보드나 보고서를 사용해 이벤트/인시던트의 영향을 파악하고 진단합니다. 이러한 대시보드나 보고서에서는 필요한 수준의 성능을 제공하지 못하는 워크로드 부분을 파악할 수 있습니다.\n워크로드 성능 측정을 위한 KPI 설정 시스템이 예상한 성능을 제공하는지 여부를 나타내는 KPI를 파악합니다. 예를 들어 API 기반 워크로드는 전반적인 성능의 지표로 전체 응답 지연 시간을 사용할 수 있으며, 전자상거래 사이트는 구매 건 수를 KPI로 사용하도록 선택할 수 있습니다.\n모니터링을 사용하여 경보 기반 알림 생성 직접 정의한 성능 관련 KPI를 사용해 측정값이 예상 경계를 벗어나면 경보를 자동으로 생성하는 모니터링 시스템을 사용합니다.\n일정한 간격으로 지표 검토 주기적인 유지 관리의 일환으로 또는 이벤트나 인시던트 대응 과정에서 수집된 지표를 검토합니다. 이러한 검토를 진행하면 문제를 해결하는 데 반드시 필요했던 지표, 그리고 문제를 확인/해결/방지하는 데 도움이 되었던 지표(추적한 경우)를 파악할 수 있습니다.\n사전 모니터링 및 경보 생성 KPI를 모니터링 및 알림 시스템과 함께 사용하여 성능 관련 문제를 사전에 해결합니다. 가능한 경우 경보를 사용해 문제 해결을 위한 자동화된 작업을 트리거합니다. 그리고 자동으로 대응할 수 없는 경우에는 대응 가능한 구성 요소로 경보를 에스컬레이션합니다. 예를 들어 필요한 KPI 값을 예측하고 해당 값이 특정 임계값을 초과하는 경우 경보를 생성할 수 있는 시스템이나, KPI가 필요한 값의 범위를 벗어나는 경우 배포를 자동으로 중지하거나 롤백할 수 있는 도구로 경보를 에스컬레이션할 수 있습니다.\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/credits/",
	"title": "credits",
	"tags": [],
	"description": "",
	"content": "Sample  aws-samples  Tools  Hugo  제작: Seyong Kang\n"
},
{
	"uri": "http://wellarchitected.workshop.kr.s3-website-us-west-2.amazonaws.com/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]